{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sayda\\\\CascadeProjects\\\\beta-tech-support\\\\frontend\\\\src\\\\components\\\\auth\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  allowedRoles\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n\n  // Show loading indicator while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If no user is logged in, redirect to the login page\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if the user's role is in the allowed roles list\n  if (!allowedRoles.includes(user.role)) {\n    // Redirect based on role\n    switch (user.role) {\n      case 'admin':\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }, this);\n      case 'technical':\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/technical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 16\n        }, this);\n      case 'client':\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this);\n      default:\n        // Fallback to login if role is unknown\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this);\n    }\n  }\n\n  // If user is authenticated and has permission, render the protected route\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n_s(PrivateRoute, \"EmJkapf7qiLC5Br5eCoEq4veZes=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useAuth","jsxDEV","_jsxDEV","PrivateRoute","allowedRoles","_s","user","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","to","includes","role","_c","$RefreshReg$"],"sources":["C:/Users/sayda/CascadeProjects/beta-tech-support/frontend/src/components/auth/PrivateRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst PrivateRoute = ({ allowedRoles }) => {\n  const { user, loading } = useAuth();\n  \n  // Show loading indicator while checking authentication\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  \n  // If no user is logged in, redirect to the login page\n  if (!user) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  // Check if the user's role is in the allowed roles list\n  if (!allowedRoles.includes(user.role)) {\n    // Redirect based on role\n    switch(user.role) {\n      case 'admin':\n        return <Navigate to=\"/admin\" />;\n      case 'technical':\n        return <Navigate to=\"/technical\" />;\n      case 'client':\n        return <Navigate to=\"/client\" />;\n      default:\n        // Fallback to login if role is unknown\n        return <Navigate to=\"/login\" />;\n    }\n  }\n\n  // If user is authenticated and has permission, render the protected route\n  return <Outlet />;\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGP,OAAO,CAAC,CAAC;;EAEnC;EACA,IAAIO,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAM,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;;EAEA;EACA,IAAI,CAACN,IAAI,EAAE;IACT,oBAAOJ,OAAA,CAACJ,QAAQ;MAACe,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,IAAI,CAACR,YAAY,CAACU,QAAQ,CAACR,IAAI,CAACS,IAAI,CAAC,EAAE;IACrC;IACA,QAAOT,IAAI,CAACS,IAAI;MACd,KAAK,OAAO;QACV,oBAAOb,OAAA,CAACJ,QAAQ;UAACe,EAAE,EAAC;QAAQ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACjC,KAAK,WAAW;QACd,oBAAOV,OAAA,CAACJ,QAAQ;UAACe,EAAE,EAAC;QAAY;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACrC,KAAK,QAAQ;QACX,oBAAOV,OAAA,CAACJ,QAAQ;UAACe,EAAE,EAAC;QAAS;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAClC;QACE;QACA,oBAAOV,OAAA,CAACJ,QAAQ;UAACe,EAAE,EAAC;QAAQ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IACnC;EACF;;EAEA;EACA,oBAAOV,OAAA,CAACH,MAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACP,EAAA,CA/BIF,YAAY;EAAA,QACUH,OAAO;AAAA;AAAAgB,EAAA,GAD7Bb,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}