{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sayda\\\\CascadeProjects\\\\beta-tech-support\\\\frontend\\\\src\\\\pages\\\\auth\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Paper, TextField, Button, Typography, Box, Alert, FormControl, InputLabel, Select, MenuItem, Grid, Divider } from '@mui/material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    register,\n    user\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    firstName: '',\n    lastName: '',\n    username: '',\n    phoneNumber: '',\n    role: 'client',\n    companyName: '',\n    department: 'IT',\n    specialization: []\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Redirect if user is not an admin but tries to register a technician\n  useEffect(() => {\n    // Allow non-technical accounts by default unless the user is an admin\n    const isAdminUser = user && user.role === 'admin';\n\n    // If user tries to create a technical account but is not an admin, reset to client\n    if (formData.role === 'technical' && !isAdminUser) {\n      setFormData(prev => ({\n        ...prev,\n        role: 'client'\n      }));\n      setError('Only administrators can create technical accounts');\n    }\n  }, [formData.role, user]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    if (formData.password !== formData.confirmPassword) {\n      return setError('Passwords do not match');\n    }\n\n    // If trying to create a technical account without being an admin\n    if (formData.role === 'technical' && (!user || user.role !== 'admin')) {\n      return setError('Only administrators can create technical accounts');\n    }\n    setLoading(true);\n    try {\n      const userData = {\n        email: formData.email,\n        password: formData.password,\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        username: formData.username,\n        phoneNumber: formData.phoneNumber,\n        role: formData.role,\n        ...(formData.role === 'client' && {\n          companyName: formData.companyName,\n          department: formData.department\n        }),\n        ...(formData.role === 'technical' && {\n          specialization: formData.specialization\n        })\n      };\n      const newUser = await register(userData);\n\n      // Redirect based on user role\n      switch (newUser.role) {\n        case 'client':\n          navigate('/client');\n          break;\n        case 'technical':\n          navigate('/technical');\n          break;\n        default:\n          navigate('/login');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to create account');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const departments = ['IT', 'Finance', 'Human Resources', 'Marketing', 'Sales', 'Operations', 'Research & Development', 'Customer Service', 'Legal', 'Other'];\n  const specializations = ['Hardware', 'Software', 'Network', 'Cloud Services', 'Database', 'Security', 'Mobile Devices', 'Printers', 'Email', 'VoIP'];\n\n  // Only show admin options when logged in as admin\n  const isAdmin = user && user.role === 'admin';\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          padding: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: isAdmin ? 'Create New User Account' : 'Create Client Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 2,\n            width: '100%'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSubmit,\n          sx: {\n            mt: 3,\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"firstName\",\n                label: \"First Name\",\n                name: \"firstName\",\n                value: formData.firstName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"lastName\",\n                label: \"Last Name\",\n                name: \"lastName\",\n                value: formData.lastName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"username\",\n                label: \"Username\",\n                name: \"username\",\n                autoComplete: \"username\",\n                value: formData.username,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"email\",\n                label: \"Email Address\",\n                name: \"email\",\n                autoComplete: \"email\",\n                value: formData.email,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"phoneNumber\",\n                label: \"Phone Number\",\n                name: \"phoneNumber\",\n                value: formData.phoneNumber,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                id: \"password\",\n                autoComplete: \"new-password\",\n                value: formData.password,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"confirmPassword\",\n                label: \"Confirm Password\",\n                type: \"password\",\n                id: \"confirmPassword\",\n                value: formData.confirmPassword,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), isAdmin && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"role-label\",\n                  children: \"Account Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"role-label\",\n                  id: \"role\",\n                  name: \"role\",\n                  value: formData.role,\n                  label: \"Account Type\",\n                  onChange: handleChange,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"client\",\n                    children: \"Client\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"technical\",\n                    children: \"Technician\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"admin\",\n                    children: \"Administrator\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), formData.role === 'client' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  id: \"companyName\",\n                  label: \"Company Name\",\n                  name: \"companyName\",\n                  value: formData.companyName,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"department-label\",\n                    children: \"Department\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"department-label\",\n                    id: \"department\",\n                    name: \"department\",\n                    value: formData.department,\n                    label: \"Department\",\n                    onChange: handleChange,\n                    children: departments.map(dept => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: dept,\n                      children: dept\n                    }, dept, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), formData.role === 'technical' && isAdmin && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"specialization-label\",\n                  children: \"Specialization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"specialization-label\",\n                  id: \"specialization\",\n                  name: \"specialization\",\n                  multiple: true,\n                  value: formData.specialization,\n                  label: \"Specialization\",\n                  onChange: handleChange,\n                  children: specializations.map(spec => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: spec,\n                    children: spec\n                  }, spec, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            disabled: loading,\n            children: loading ? 'Creating Account...' : 'Create Account'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"text\",\n            onClick: () => navigate('/login'),\n            sx: {\n              mt: 1\n            },\n            children: \"Already have an account? Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"/jwvrl2lb9WekJC96N2aYTFqch0=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Container","Paper","TextField","Button","Typography","Box","Alert","FormControl","InputLabel","Select","MenuItem","Grid","Divider","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","navigate","register","user","formData","setFormData","email","password","confirmPassword","firstName","lastName","username","phoneNumber","role","companyName","department","specialization","error","setError","loading","setLoading","isAdminUser","prev","handleChange","e","target","name","value","handleSubmit","preventDefault","userData","newUser","err","_err$response","_err$response$data","response","data","message","departments","specializations","isAdmin","component","maxWidth","children","sx","marginTop","display","flexDirection","alignItems","elevation","padding","width","variant","fileName","_jsxFileName","lineNumber","columnNumber","severity","mt","onSubmit","container","spacing","item","xs","sm","required","fullWidth","id","label","onChange","autoComplete","type","labelId","map","dept","multiple","spec","mb","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sayda/CascadeProjects/beta-tech-support/frontend/src/pages/auth/Register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  Box,\n  Alert,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Divider\n} from '@mui/material';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const { register, user } = useAuth();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    firstName: '',\n    lastName: '',\n    username: '',\n    phoneNumber: '',\n    role: 'client',\n    companyName: '',\n    department: 'IT',\n    specialization: []\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Redirect if user is not an admin but tries to register a technician\n  useEffect(() => {\n    // Allow non-technical accounts by default unless the user is an admin\n    const isAdminUser = user && user.role === 'admin';\n    \n    // If user tries to create a technical account but is not an admin, reset to client\n    if (formData.role === 'technical' && !isAdminUser) {\n      setFormData(prev => ({ ...prev, role: 'client' }));\n      setError('Only administrators can create technical accounts');\n    }\n  }, [formData.role, user]);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (formData.password !== formData.confirmPassword) {\n      return setError('Passwords do not match');\n    }\n\n    // If trying to create a technical account without being an admin\n    if (formData.role === 'technical' && (!user || user.role !== 'admin')) {\n      return setError('Only administrators can create technical accounts');\n    }\n\n    setLoading(true);\n\n    try {\n      const userData = {\n        email: formData.email,\n        password: formData.password,\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        username: formData.username,\n        phoneNumber: formData.phoneNumber,\n        role: formData.role,\n        ...(formData.role === 'client' && {\n          companyName: formData.companyName,\n          department: formData.department\n        }),\n        ...(formData.role === 'technical' && {\n          specialization: formData.specialization\n        })\n      };\n\n      const newUser = await register(userData);\n      \n      // Redirect based on user role\n      switch (newUser.role) {\n        case 'client':\n          navigate('/client');\n          break;\n        case 'technical':\n          navigate('/technical');\n          break;\n        default:\n          navigate('/login');\n      }\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to create account');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const departments = [\n    'IT', 'Finance', 'Human Resources', 'Marketing', 'Sales', \n    'Operations', 'Research & Development', 'Customer Service', 'Legal', 'Other'\n  ];\n\n  const specializations = [\n    'Hardware', 'Software', 'Network', 'Cloud Services', 'Database', \n    'Security', 'Mobile Devices', 'Printers', 'Email', 'VoIP'\n  ];\n\n  // Only show admin options when logged in as admin\n  const isAdmin = user && user.role === 'admin';\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Paper\n          elevation={3}\n          sx={{\n            padding: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            width: '100%',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            {isAdmin ? 'Create New User Account' : 'Create Client Account'}\n          </Typography>\n\n          {error && (\n            <Alert severity=\"error\" sx={{ mt: 2, width: '100%' }}>\n              {error}\n            </Alert>\n          )}\n\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3, width: '100%' }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  name=\"firstName\"\n                  value={formData.firstName}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  value={formData.lastName}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  value={formData.username}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"phoneNumber\"\n                  label=\"Phone Number\"\n                  name=\"phoneNumber\"\n                  value={formData.phoneNumber}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"confirmPassword\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleChange}\n                />\n              </Grid>\n\n              {/* Only show role selection if logged in as admin */}\n              {isAdmin && (\n                <Grid item xs={12}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"role-label\">Account Type</InputLabel>\n                    <Select\n                      labelId=\"role-label\"\n                      id=\"role\"\n                      name=\"role\"\n                      value={formData.role}\n                      label=\"Account Type\"\n                      onChange={handleChange}\n                    >\n                      <MenuItem value=\"client\">Client</MenuItem>\n                      <MenuItem value=\"technical\">Technician</MenuItem>\n                      <MenuItem value=\"admin\">Administrator</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n              )}\n\n              {/* Fields for client account type */}\n              {(formData.role === 'client') && (\n                <>\n                  <Grid item xs={12}>\n                    <TextField\n                      required\n                      fullWidth\n                      id=\"companyName\"\n                      label=\"Company Name\"\n                      name=\"companyName\"\n                      value={formData.companyName}\n                      onChange={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControl fullWidth>\n                      <InputLabel id=\"department-label\">Department</InputLabel>\n                      <Select\n                        labelId=\"department-label\"\n                        id=\"department\"\n                        name=\"department\"\n                        value={formData.department}\n                        label=\"Department\"\n                        onChange={handleChange}\n                      >\n                        {departments.map((dept) => (\n                          <MenuItem key={dept} value={dept}>{dept}</MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </>\n              )}\n\n              {/* Fields for technical account type (only shown if admin creates it) */}\n              {(formData.role === 'technical' && isAdmin) && (\n                <Grid item xs={12}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"specialization-label\">Specialization</InputLabel>\n                    <Select\n                      labelId=\"specialization-label\"\n                      id=\"specialization\"\n                      name=\"specialization\"\n                      multiple\n                      value={formData.specialization}\n                      label=\"Specialization\"\n                      onChange={handleChange}\n                    >\n                      {specializations.map((spec) => (\n                        <MenuItem key={spec} value={spec}>{spec}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              )}\n            </Grid>\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={loading}\n            >\n              {loading ? 'Creating Account...' : 'Create Account'}\n            </Button>\n            \n            <Button\n              fullWidth\n              variant=\"text\"\n              onClick={() => navigate('/login')}\n              sx={{ mt: 1 }}\n            >\n              Already have an account? Sign In\n            </Button>\n          </Box>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}