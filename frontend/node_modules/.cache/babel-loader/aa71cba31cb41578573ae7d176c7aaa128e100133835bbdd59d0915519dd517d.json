{"ast":null,"code":"/**\n * API Configuration\n * \n * This file centralizes API URL configuration for the application.\n * It ensures consistent API endpoints across components.\n */\n\n// Force port 5002 to ensure correct backend connection\nconst API_BASE_URL = 'http://localhost:5002';\n\n// Log API configuration on startup\nconsole.log('API Configuration (FORCED PORT 5002):', {\n  API_BASE_URL,\n  ENV_API_URL: process.env.REACT_APP_API_URL\n});\nexport const API_URL = `${API_BASE_URL}/api`;\n\n// Socket.io connection URL (same as API base URL)\nexport const SOCKET_URL = API_BASE_URL;\n\n// Log Socket configuration\nconsole.log('Socket Configuration (FORCED PORT 5002):', {\n  SOCKET_URL,\n  ENV_SOCKET_URL: process.env.REACT_APP_SOCKET_URL\n});\n\n// Auth endpoints\nexport const AUTH_ENDPOINTS = {\n  LOGIN: `${API_URL}/auth/login`,\n  REGISTER: `${API_URL}/auth/register`,\n  VERIFY: `${API_URL}/auth/verify`,\n  PROFILE: `${API_URL}/auth/profile`\n};\n\n// Ticket endpoints\nexport const TICKET_ENDPOINTS = {\n  CREATE: `${API_URL}/tickets`,\n  GET_ALL: `${API_URL}/tickets`,\n  GET_BY_ID: id => `${API_URL}/tickets/${id}`,\n  UPDATE_STATUS: id => `${API_URL}/tickets/${id}/status`,\n  ASSIGN: id => `${API_URL}/tickets/${id}/assign`,\n  ADD_MESSAGE: id => `${API_URL}/tickets/${id}/messages`,\n  GET_MESSAGES: id => `${API_URL}/tickets/${id}/messages`,\n  GET_STATS: `${API_URL}/tickets/stats`\n};\n\n// User endpoints\nexport const USER_ENDPOINTS = {\n  GET_ALL: `${API_URL}/users`,\n  GET_BY_ID: id => `${API_URL}/users/${id}`,\n  UPDATE: id => `${API_URL}/users/${id}`,\n  GET_TECHNICIANS: `${API_URL}/users/technicians`\n};\n\n// Admin endpoints\nexport const ADMIN_ENDPOINTS = {\n  DASHBOARD: `${API_URL}/admin/stats`,\n  USERS: `${API_URL}/admin/users`,\n  TICKETS: `${API_URL}/admin/tickets`,\n  TECHNICIANS: `${API_URL}/admin/technicians`,\n  ASSIGN_TICKET: id => `${API_URL}/admin/tickets/${id}/assign`,\n  TICKET_HISTORY: `${API_URL}/admin/tickets/history`\n};\nexport default {\n  API_URL,\n  SOCKET_URL,\n  AUTH_ENDPOINTS,\n  TICKET_ENDPOINTS,\n  USER_ENDPOINTS,\n  ADMIN_ENDPOINTS\n};","map":{"version":3,"names":["API_BASE_URL","console","log","ENV_API_URL","process","env","REACT_APP_API_URL","API_URL","SOCKET_URL","ENV_SOCKET_URL","REACT_APP_SOCKET_URL","AUTH_ENDPOINTS","LOGIN","REGISTER","VERIFY","PROFILE","TICKET_ENDPOINTS","CREATE","GET_ALL","GET_BY_ID","id","UPDATE_STATUS","ASSIGN","ADD_MESSAGE","GET_MESSAGES","GET_STATS","USER_ENDPOINTS","UPDATE","GET_TECHNICIANS","ADMIN_ENDPOINTS","DASHBOARD","USERS","TICKETS","TECHNICIANS","ASSIGN_TICKET","TICKET_HISTORY"],"sources":["C:/Users/sayda/CascadeProjects/beta-tech-support/frontend/src/utils/apiConfig.js"],"sourcesContent":["/**\n * API Configuration\n * \n * This file centralizes API URL configuration for the application.\n * It ensures consistent API endpoints across components.\n */\n\n// Force port 5002 to ensure correct backend connection\nconst API_BASE_URL = 'http://localhost:5002';\n\n// Log API configuration on startup\nconsole.log('API Configuration (FORCED PORT 5002):', {\n  API_BASE_URL,\n  ENV_API_URL: process.env.REACT_APP_API_URL\n});\n\nexport const API_URL = `${API_BASE_URL}/api`;\n\n// Socket.io connection URL (same as API base URL)\nexport const SOCKET_URL = API_BASE_URL;\n\n// Log Socket configuration\nconsole.log('Socket Configuration (FORCED PORT 5002):', {\n  SOCKET_URL,\n  ENV_SOCKET_URL: process.env.REACT_APP_SOCKET_URL\n});\n\n// Auth endpoints\nexport const AUTH_ENDPOINTS = {\n  LOGIN: `${API_URL}/auth/login`,\n  REGISTER: `${API_URL}/auth/register`,\n  VERIFY: `${API_URL}/auth/verify`,\n  PROFILE: `${API_URL}/auth/profile`\n};\n\n// Ticket endpoints\nexport const TICKET_ENDPOINTS = {\n  CREATE: `${API_URL}/tickets`,\n  GET_ALL: `${API_URL}/tickets`,\n  GET_BY_ID: (id) => `${API_URL}/tickets/${id}`,\n  UPDATE_STATUS: (id) => `${API_URL}/tickets/${id}/status`,\n  ASSIGN: (id) => `${API_URL}/tickets/${id}/assign`,\n  ADD_MESSAGE: (id) => `${API_URL}/tickets/${id}/messages`,\n  GET_MESSAGES: (id) => `${API_URL}/tickets/${id}/messages`,\n  GET_STATS: `${API_URL}/tickets/stats`\n};\n\n// User endpoints\nexport const USER_ENDPOINTS = {\n  GET_ALL: `${API_URL}/users`,\n  GET_BY_ID: (id) => `${API_URL}/users/${id}`,\n  UPDATE: (id) => `${API_URL}/users/${id}`,\n  GET_TECHNICIANS: `${API_URL}/users/technicians`\n};\n\n// Admin endpoints\nexport const ADMIN_ENDPOINTS = {\n  DASHBOARD: `${API_URL}/admin/stats`,\n  USERS: `${API_URL}/admin/users`,\n  TICKETS: `${API_URL}/admin/tickets`,\n  TECHNICIANS: `${API_URL}/admin/technicians`,\n  ASSIGN_TICKET: (id) => `${API_URL}/admin/tickets/${id}/assign`,\n  TICKET_HISTORY: `${API_URL}/admin/tickets/history`\n};\n\nexport default {\n  API_URL,\n  SOCKET_URL,\n  AUTH_ENDPOINTS,\n  TICKET_ENDPOINTS,\n  USER_ENDPOINTS,\n  ADMIN_ENDPOINTS\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMA,YAAY,GAAG,uBAAuB;;AAE5C;AACAC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAE;EACnDF,YAAY;EACZG,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC;AAC3B,CAAC,CAAC;AAEF,OAAO,MAAMC,OAAO,GAAG,GAAGP,YAAY,MAAM;;AAE5C;AACA,OAAO,MAAMQ,UAAU,GAAGR,YAAY;;AAEtC;AACAC,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAE;EACtDM,UAAU;EACVC,cAAc,EAAEL,OAAO,CAACC,GAAG,CAACK;AAC9B,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,cAAc,GAAG;EAC5BC,KAAK,EAAE,GAAGL,OAAO,aAAa;EAC9BM,QAAQ,EAAE,GAAGN,OAAO,gBAAgB;EACpCO,MAAM,EAAE,GAAGP,OAAO,cAAc;EAChCQ,OAAO,EAAE,GAAGR,OAAO;AACrB,CAAC;;AAED;AACA,OAAO,MAAMS,gBAAgB,GAAG;EAC9BC,MAAM,EAAE,GAAGV,OAAO,UAAU;EAC5BW,OAAO,EAAE,GAAGX,OAAO,UAAU;EAC7BY,SAAS,EAAGC,EAAE,IAAK,GAAGb,OAAO,YAAYa,EAAE,EAAE;EAC7CC,aAAa,EAAGD,EAAE,IAAK,GAAGb,OAAO,YAAYa,EAAE,SAAS;EACxDE,MAAM,EAAGF,EAAE,IAAK,GAAGb,OAAO,YAAYa,EAAE,SAAS;EACjDG,WAAW,EAAGH,EAAE,IAAK,GAAGb,OAAO,YAAYa,EAAE,WAAW;EACxDI,YAAY,EAAGJ,EAAE,IAAK,GAAGb,OAAO,YAAYa,EAAE,WAAW;EACzDK,SAAS,EAAE,GAAGlB,OAAO;AACvB,CAAC;;AAED;AACA,OAAO,MAAMmB,cAAc,GAAG;EAC5BR,OAAO,EAAE,GAAGX,OAAO,QAAQ;EAC3BY,SAAS,EAAGC,EAAE,IAAK,GAAGb,OAAO,UAAUa,EAAE,EAAE;EAC3CO,MAAM,EAAGP,EAAE,IAAK,GAAGb,OAAO,UAAUa,EAAE,EAAE;EACxCQ,eAAe,EAAE,GAAGrB,OAAO;AAC7B,CAAC;;AAED;AACA,OAAO,MAAMsB,eAAe,GAAG;EAC7BC,SAAS,EAAE,GAAGvB,OAAO,cAAc;EACnCwB,KAAK,EAAE,GAAGxB,OAAO,cAAc;EAC/ByB,OAAO,EAAE,GAAGzB,OAAO,gBAAgB;EACnC0B,WAAW,EAAE,GAAG1B,OAAO,oBAAoB;EAC3C2B,aAAa,EAAGd,EAAE,IAAK,GAAGb,OAAO,kBAAkBa,EAAE,SAAS;EAC9De,cAAc,EAAE,GAAG5B,OAAO;AAC5B,CAAC;AAED,eAAe;EACbA,OAAO;EACPC,UAAU;EACVG,cAAc;EACdK,gBAAgB;EAChBU,cAAc;EACdG;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}