{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sayda\\\\CascadeProjects\\\\beta-tech-support\\\\frontend\\\\src\\\\components\\\\notifications\\\\NotificationBadge.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Badge, IconButton, Tooltip } from '@mui/material';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport { useNotifications } from '../../contexts/NotificationContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationBadge = ({\n  onClick,\n  size = 'medium'\n}) => {\n  _s();\n  const {\n    unreadCount\n  } = useNotifications();\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: unreadCount > 0 ? `${unreadCount} unread notifications` : 'No new notifications',\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      size: size,\n      color: \"inherit\",\n      onClick: onClick,\n      \"aria-label\": \"show notifications\",\n      \"aria-controls\": \"notifications-menu\",\n      \"aria-haspopup\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: unreadCount,\n        color: \"error\",\n        children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationBadge, \"veL+/A1TMdl/q/Vc41sXFATmIys=\", false, function () {\n  return [useNotifications];\n});\n_c = NotificationBadge;\nexport default NotificationBadge;\nvar _c;\n$RefreshReg$(_c, \"NotificationBadge\");","map":{"version":3,"names":["React","Badge","IconButton","Tooltip","NotificationsIcon","useNotifications","jsxDEV","_jsxDEV","NotificationBadge","onClick","size","_s","unreadCount","title","children","color","badgeContent","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sayda/CascadeProjects/beta-tech-support/frontend/src/components/notifications/NotificationBadge.js"],"sourcesContent":["import React from 'react';\nimport { Badge, IconButton, Tooltip } from '@mui/material';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport { useNotifications } from '../../contexts/NotificationContext';\n\nconst NotificationBadge = ({ onClick, size = 'medium' }) => {\n  const { unreadCount } = useNotifications();\n\n  return (\n    <Tooltip title={unreadCount > 0 ? `${unreadCount} unread notifications` : 'No new notifications'}>\n      <IconButton\n        size={size}\n        color=\"inherit\"\n        onClick={onClick}\n        aria-label=\"show notifications\"\n        aria-controls=\"notifications-menu\"\n        aria-haspopup=\"true\"\n      >\n        <Badge badgeContent={unreadCount} color=\"error\">\n          <NotificationsIcon />\n        </Badge>\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default NotificationBadge;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,UAAU,EAAEC,OAAO,QAAQ,eAAe;AAC1D,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,SAASC,gBAAgB,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,OAAO;EAAEC,IAAI,GAAG;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM;IAAEC;EAAY,CAAC,GAAGP,gBAAgB,CAAC,CAAC;EAE1C,oBACEE,OAAA,CAACJ,OAAO;IAACU,KAAK,EAAED,WAAW,GAAG,CAAC,GAAG,GAAGA,WAAW,uBAAuB,GAAG,sBAAuB;IAAAE,QAAA,eAC/FP,OAAA,CAACL,UAAU;MACTQ,IAAI,EAAEA,IAAK;MACXK,KAAK,EAAC,SAAS;MACfN,OAAO,EAAEA,OAAQ;MACjB,cAAW,oBAAoB;MAC/B,iBAAc,oBAAoB;MAClC,iBAAc,MAAM;MAAAK,QAAA,eAEpBP,OAAA,CAACN,KAAK;QAACe,YAAY,EAAEJ,WAAY;QAACG,KAAK,EAAC,OAAO;QAAAD,QAAA,eAC7CP,OAAA,CAACH,iBAAiB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACT,EAAA,CAnBIH,iBAAiB;EAAA,QACGH,gBAAgB;AAAA;AAAAgB,EAAA,GADpCb,iBAAiB;AAqBvB,eAAeA,iBAAiB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}