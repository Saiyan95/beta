{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sayda\\\\CascadeProjects\\\\beta-tech-support\\\\frontend\\\\src\\\\pages\\\\dashboard\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Paper, Typography, Box, Card, CardContent, CardHeader, Tab, Tabs, Button, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, Select, MenuItem, Divider } from '@mui/material';\nimport { Assignment as TicketIcon, People as PeopleIcon, Warning as UrgentIcon, CheckCircle as ResolvedIcon, History as HistoryIcon, SupervisorAccount as ClientsIcon, Dashboard as DashboardIcon } from '@mui/icons-material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport TicketList from '../../components/tickets/TicketList';\nimport { API_URL, ADMIN_ENDPOINTS } from '../../utils/apiConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatCard = ({\n  title,\n  value,\n  icon,\n  color\n}) => /*#__PURE__*/_jsxDEV(Card, {\n  sx: {\n    height: '100%'\n  },\n  children: /*#__PURE__*/_jsxDEV(CardContent, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 2\n      },\n      children: [/*#__PURE__*/React.cloneElement(icon, {\n        sx: {\n          color,\n          mr: 1\n        }\n      }), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        variant: \"h6\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 3\n}, this);\n_c = StatCard;\nconst ActionCard = ({\n  title,\n  description,\n  icon,\n  color,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(Card, {\n  sx: {\n    height: '100%',\n    cursor: 'pointer',\n    transition: 'transform 0.2s, box-shadow 0.2s',\n    '&:hover': {\n      transform: 'translateY(-4px)',\n      boxShadow: 6\n    }\n  },\n  onClick: onClick,\n  children: /*#__PURE__*/_jsxDEV(CardContent, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 2\n      },\n      children: [/*#__PURE__*/React.cloneElement(icon, {\n        sx: {\n          color,\n          fontSize: 28,\n          mr: 1\n        }\n      }), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        fontWeight: \"bold\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 3\n}, this);\n_c2 = ActionCard;\nconst AdminDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [stats, setStats] = useState({\n    totalTickets: 0,\n    totalUsers: 0,\n    urgentTickets: 0,\n    resolvedToday: 0\n  });\n  const [tickets, setTickets] = useState([]);\n  const [technicians, setTechnicians] = useState([]);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [assignDialogOpen, setAssignDialogOpen] = useState(false);\n  const [selectedTicket, setSelectedTicket] = useState(null);\n  const [selectedTechnician, setSelectedTechnician] = useState('');\n  const [assignAllDialogOpen, setAssignAllDialogOpen] = useState(false);\n  const [assignAllTechnician, setAssignAllTechnician] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Use localStorage token for authentication\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.error('No authentication token found');\n          setError('Authentication error. Please log in again.');\n          setLoading(false);\n          return;\n        }\n\n        // Set up headers\n        const headers = {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        };\n        console.log('Using token:', token);\n        console.log('Fetching admin dashboard data');\n\n        // Fallback stats if API fails\n        setStats({\n          totalTickets: 5,\n          totalUsers: 10,\n          urgentTickets: 2,\n          resolvedToday: 1\n        });\n\n        // Sample tickets if API fails\n        setTickets([{\n          _id: '1',\n          title: 'Sample Ticket 1',\n          status: 'open',\n          priority: 'medium',\n          createdAt: new Date().toISOString(),\n          createdBy: {\n            username: 'client1',\n            firstName: 'Client',\n            lastName: 'User'\n          }\n        }, {\n          _id: '2',\n          title: 'Sample Ticket 2',\n          status: 'assigned',\n          priority: 'high',\n          createdAt: new Date().toISOString(),\n          createdBy: {\n            username: 'client2',\n            firstName: 'Another',\n            lastName: 'Client'\n          }\n        }]);\n\n        // Try to get actual data from API\n        try {\n          const statsResponse = await axios.get(ADMIN_ENDPOINTS.DASHBOARD, {\n            headers\n          });\n          console.log('Stats API response:', statsResponse.data);\n          if (statsResponse.data) {\n            setStats(statsResponse.data);\n          }\n        } catch (statsError) {\n          var _statsError$response;\n          console.error('Error fetching stats:', statsError);\n          console.error('Error details:', ((_statsError$response = statsError.response) === null || _statsError$response === void 0 ? void 0 : _statsError$response.data) || statsError.message);\n        }\n        try {\n          const ticketsResponse = await axios.get(ADMIN_ENDPOINTS.TICKETS, {\n            headers\n          });\n          console.log('Tickets API response:', ticketsResponse.data);\n          if (ticketsResponse.data && Array.isArray(ticketsResponse.data)) {\n            setTickets(ticketsResponse.data);\n          }\n        } catch (ticketsError) {\n          var _ticketsError$respons;\n          console.error('Error fetching tickets:', ticketsError);\n          console.error('Error details:', ((_ticketsError$respons = ticketsError.response) === null || _ticketsError$respons === void 0 ? void 0 : _ticketsError$respons.data) || ticketsError.message);\n        }\n      } catch (error) {\n        console.error('Dashboard error:', error);\n        setError('Failed to load dashboard. Using sample data instead.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n    fetchTechnicians();\n  }, []);\n  const fetchTechnicians = async () => {\n    try {\n      console.log('Fetching technicians from:', `${API_URL}/technicians`);\n      const response = await axios.get(`${API_URL}/technicians`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      console.log('Technicians data:', response.data);\n      setTechnicians(response.data);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching technicians:', error);\n      console.error('Error details:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  const handleAssignTicket = ticketId => {\n    setSelectedTicket(ticketId);\n    setAssignDialogOpen(true);\n  };\n  const handleConfirmAssign = async () => {\n    try {\n      await axios.post(`${API_URL}/tickets/${selectedTicket}/assign`, {\n        technicianId: selectedTechnician\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const fetchData = async () => {\n        try {\n          const ticketsResponse = await axios.get(`${API_URL}/tickets`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          if (ticketsResponse.data && Array.isArray(ticketsResponse.data)) {\n            setTickets(ticketsResponse.data);\n          }\n        } catch (error) {\n          console.error('Error fetching tickets after assignment:', error);\n        }\n      };\n      fetchData();\n      setAssignDialogOpen(false);\n      setSelectedTicket(null);\n      setSelectedTechnician('');\n    } catch (error) {\n      var _error$response2;\n      console.error('Error assigning ticket:', error);\n      console.error('Error details:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    }\n  };\n  const assignAllUnassignedTickets = async technicianUsername => {\n    try {\n      const response = await axios.get(`${API_URL}/users/find?username=${technicianUsername}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const technician = response.data;\n      if (!technician || !technician._id) {\n        alert(`Technician ${technicianUsername} not found`);\n        return;\n      }\n      const unassignedTickets = tickets.filter(ticket => !ticket.assignedTo);\n      console.log(`Found ${unassignedTickets.length} unassigned tickets to assign to ${technicianUsername}`);\n      if (unassignedTickets.length === 0) {\n        alert('No unassigned tickets found');\n        return;\n      }\n      const assignPromises = unassignedTickets.map(ticket => axios.patch(`${API_URL}/tickets/${ticket._id}/assign`, {\n        technicianId: technician._id\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      }));\n      await Promise.all(assignPromises);\n      alert(`Successfully assigned ${unassignedTickets.length} tickets to ${technicianUsername}`);\n      const fetchData = async () => {\n        try {\n          const ticketsResponse = await axios.get(`${API_URL}/tickets`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          if (ticketsResponse.data && Array.isArray(ticketsResponse.data)) {\n            setTickets(ticketsResponse.data);\n          }\n        } catch (error) {\n          console.error('Error fetching tickets after bulk assignment:', error);\n        }\n      };\n      fetchData();\n    } catch (error) {\n      var _error$response3;\n      console.error('Error assigning all unassigned tickets:', error);\n      console.error('Error details:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      alert(`Failed to assign tickets: ${error.message}`);\n    }\n  };\n  const filterTickets = () => {\n    switch (selectedTab) {\n      case 0:\n        // All\n        return tickets;\n      case 1:\n        // Unassigned\n        return tickets.filter(ticket => !ticket.assignedTo);\n      case 2:\n        // Urgent\n        return tickets.filter(ticket => ticket.priority === 'urgent');\n      case 3:\n        // Resolved\n        return tickets.filter(ticket => ticket.status === 'resolved');\n      default:\n        return tickets;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"Manage support tickets, technicians, and system statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Total Tickets\",\n          value: stats.totalTickets || 0,\n          icon: /*#__PURE__*/_jsxDEV(TicketIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 19\n          }, this),\n          color: \"primary.main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Total Users\",\n          value: stats.totalUsers || 0,\n          icon: /*#__PURE__*/_jsxDEV(PeopleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 19\n          }, this),\n          color: \"info.main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Urgent Tickets\",\n          value: stats.urgentTickets || 0,\n          icon: /*#__PURE__*/_jsxDEV(UrgentIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 19\n          }, this),\n          color: \"error.main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Resolved Today\",\n          value: stats.resolvedToday || 0,\n          icon: /*#__PURE__*/_jsxDEV(ResolvedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 19\n          }, this),\n          color: \"success.main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      sx: {\n        mb: 2\n      },\n      children: \"Quick Actions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(ActionCard, {\n          title: \"User Management\",\n          description: \"Add, edit, and remove users from the system\",\n          icon: /*#__PURE__*/_jsxDEV(PeopleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 19\n          }, this),\n          color: \"#3f51b5\",\n          onClick: () => navigate('/admin/users')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(ActionCard, {\n          title: \"Client Management\",\n          description: \"View and manage client accounts and tickets\",\n          icon: /*#__PURE__*/_jsxDEV(ClientsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 19\n          }, this),\n          color: \"#2196f3\",\n          onClick: () => navigate('/admin/clients')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(ActionCard, {\n          title: \"System Dashboard\",\n          description: \"View detailed system metrics and performance\",\n          icon: /*#__PURE__*/_jsxDEV(DashboardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 19\n          }, this),\n          color: \"#9c27b0\",\n          onClick: () => navigate('/admin/system')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            mb: 2\n          },\n          children: \"Support Tickets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          value: selectedTab,\n          onChange: (e, newValue) => setSelectedTab(newValue),\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"All Tickets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Unassigned\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Urgent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Resolved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"Loading tickets...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this) : filterTickets().length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"No tickets found in this category.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: [filterTickets().length, \" tickets found\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this), selectedTab === 1 && filterTickets().length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: () => setAssignAllDialogOpen(true),\n            children: \"Assign All to Technician\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TicketList, {\n          tickets: filterTickets(),\n          isAdmin: true,\n          onAssign: handleAssignTicket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: assignDialogOpen,\n      onClose: () => setAssignDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Assign Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Technician\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedTechnician,\n            onChange: e => setSelectedTechnician(e.target.value),\n            label: \"Technician\",\n            children: technicians.map(tech => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: tech._id,\n              children: tech.name || tech.username\n            }, tech._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setAssignDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmAssign,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Assign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: assignAllDialogOpen,\n      onClose: () => setAssignAllDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Assign All Unassigned Tickets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mb: 2\n          },\n          children: \"This will assign all unassigned tickets to the selected technician.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Technician\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: assignAllTechnician,\n            onChange: e => setAssignAllTechnician(e.target.value),\n            label: \"Technician\",\n            children: technicians.map(tech => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: tech.username,\n              children: tech.name || tech.username\n            }, tech._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setAssignAllDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setAssignAllDialogOpen(false);\n            assignAllUnassignedTickets(assignAllTechnician);\n          },\n          color: \"primary\",\n          variant: \"contained\",\n          disabled: !assignAllTechnician,\n          children: \"Assign All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"O6su4k+6/m25rrbpEdF80CrT6o8=\", false, function () {\n  return [useNavigate];\n});\n_c3 = AdminDashboard;\nexport default AdminDashboard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StatCard\");\n$RefreshReg$(_c2, \"ActionCard\");\n$RefreshReg$(_c3, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Paper","Typography","Box","Card","CardContent","CardHeader","Tab","Tabs","Button","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","Select","MenuItem","Divider","Assignment","TicketIcon","People","PeopleIcon","Warning","UrgentIcon","CheckCircle","ResolvedIcon","History","HistoryIcon","SupervisorAccount","ClientsIcon","Dashboard","DashboardIcon","axios","useNavigate","TicketList","API_URL","ADMIN_ENDPOINTS","jsxDEV","_jsxDEV","StatCard","title","value","icon","color","sx","height","children","display","alignItems","mb","cloneElement","mr","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","ActionCard","description","onClick","cursor","transition","transform","boxShadow","fontSize","fontWeight","_c2","AdminDashboard","_s","navigate","stats","setStats","totalTickets","totalUsers","urgentTickets","resolvedToday","tickets","setTickets","technicians","setTechnicians","selectedTab","setSelectedTab","assignDialogOpen","setAssignDialogOpen","selectedTicket","setSelectedTicket","selectedTechnician","setSelectedTechnician","assignAllDialogOpen","setAssignAllDialogOpen","assignAllTechnician","setAssignAllTechnician","loading","setLoading","error","setError","fetchData","token","localStorage","getItem","console","headers","Authorization","log","_id","status","priority","createdAt","Date","toISOString","createdBy","username","firstName","lastName","statsResponse","get","DASHBOARD","data","statsError","_statsError$response","response","message","ticketsResponse","TICKETS","Array","isArray","ticketsError","_ticketsError$respons","fetchTechnicians","_error$response","handleAssignTicket","ticketId","handleConfirmAssign","post","technicianId","_error$response2","assignAllUnassignedTickets","technicianUsername","technician","alert","unassignedTickets","filter","ticket","assignedTo","length","assignPromises","map","patch","Promise","all","_error$response3","filterTickets","p","gutterBottom","container","spacing","item","xs","sm","md","borderBottom","borderColor","onChange","e","newValue","label","justifyContent","isAdmin","onAssign","open","onClose","fullWidth","mt","target","tech","name","disabled","_c3","$RefreshReg$"],"sources":["C:/Users/sayda/CascadeProjects/beta-tech-support/frontend/src/pages/dashboard/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Tab,\n  Tabs,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Divider\n} from '@mui/material';\nimport {\n  Assignment as TicketIcon,\n  People as PeopleIcon,\n  Warning as UrgentIcon,\n  CheckCircle as ResolvedIcon,\n  History as HistoryIcon,\n  SupervisorAccount as ClientsIcon,\n  Dashboard as DashboardIcon\n} from '@mui/icons-material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport TicketList from '../../components/tickets/TicketList';\nimport { API_URL, ADMIN_ENDPOINTS } from '../../utils/apiConfig';\n\nconst StatCard = ({ title, value, icon, color }) => (\n  <Card sx={{ height: '100%' }}>\n    <CardContent>\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n        {React.cloneElement(icon, { sx: { color, mr: 1 } })}\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          {title}\n        </Typography>\n      </Box>\n      <Typography variant=\"h4\">{value}</Typography>\n    </CardContent>\n  </Card>\n);\n\nconst ActionCard = ({ title, description, icon, color, onClick }) => (\n  <Card \n    sx={{ \n      height: '100%', \n      cursor: 'pointer', \n      transition: 'transform 0.2s, box-shadow 0.2s',\n      '&:hover': {\n        transform: 'translateY(-4px)',\n        boxShadow: 6\n      } \n    }}\n    onClick={onClick}\n  >\n    <CardContent>\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n        {React.cloneElement(icon, { sx: { color, fontSize: 28, mr: 1 } })}\n        <Typography variant=\"h6\" fontWeight=\"bold\">\n          {title}\n        </Typography>\n      </Box>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {description}\n      </Typography>\n    </CardContent>\n  </Card>\n);\n\nconst AdminDashboard = () => {\n  const navigate = useNavigate();\n  const [stats, setStats] = useState({\n    totalTickets: 0,\n    totalUsers: 0,\n    urgentTickets: 0,\n    resolvedToday: 0\n  });\n  const [tickets, setTickets] = useState([]);\n  const [technicians, setTechnicians] = useState([]);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [assignDialogOpen, setAssignDialogOpen] = useState(false);\n  const [selectedTicket, setSelectedTicket] = useState(null);\n  const [selectedTechnician, setSelectedTechnician] = useState('');\n  const [assignAllDialogOpen, setAssignAllDialogOpen] = useState(false);\n  const [assignAllTechnician, setAssignAllTechnician] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Use localStorage token for authentication\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.error('No authentication token found');\n          setError('Authentication error. Please log in again.');\n          setLoading(false);\n          return;\n        }\n        \n        // Set up headers\n        const headers = {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        };\n        \n        console.log('Using token:', token);\n        console.log('Fetching admin dashboard data');\n        \n        // Fallback stats if API fails\n        setStats({\n          totalTickets: 5,\n          totalUsers: 10,\n          urgentTickets: 2,\n          resolvedToday: 1\n        });\n        \n        // Sample tickets if API fails\n        setTickets([\n          {\n            _id: '1',\n            title: 'Sample Ticket 1',\n            status: 'open',\n            priority: 'medium',\n            createdAt: new Date().toISOString(),\n            createdBy: { username: 'client1', firstName: 'Client', lastName: 'User' }\n          },\n          {\n            _id: '2',\n            title: 'Sample Ticket 2',\n            status: 'assigned',\n            priority: 'high',\n            createdAt: new Date().toISOString(),\n            createdBy: { username: 'client2', firstName: 'Another', lastName: 'Client' }\n          }\n        ]);\n        \n        // Try to get actual data from API\n        try {\n          const statsResponse = await axios.get(ADMIN_ENDPOINTS.DASHBOARD, { headers });\n          console.log('Stats API response:', statsResponse.data);\n          if (statsResponse.data) {\n            setStats(statsResponse.data);\n          }\n        } catch (statsError) {\n          console.error('Error fetching stats:', statsError);\n          console.error('Error details:', statsError.response?.data || statsError.message);\n        }\n        \n        try {\n          const ticketsResponse = await axios.get(ADMIN_ENDPOINTS.TICKETS, { headers });\n          console.log('Tickets API response:', ticketsResponse.data);\n          if (ticketsResponse.data && Array.isArray(ticketsResponse.data)) {\n            setTickets(ticketsResponse.data);\n          }\n        } catch (ticketsError) {\n          console.error('Error fetching tickets:', ticketsError);\n          console.error('Error details:', ticketsError.response?.data || ticketsError.message);\n        }\n        \n      } catch (error) {\n        console.error('Dashboard error:', error);\n        setError('Failed to load dashboard. Using sample data instead.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n    fetchTechnicians();\n  }, []);\n\n  const fetchTechnicians = async () => {\n    try {\n      console.log('Fetching technicians from:', `${API_URL}/technicians`);\n      const response = await axios.get(`${API_URL}/technicians`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      console.log('Technicians data:', response.data);\n      setTechnicians(response.data);\n    } catch (error) {\n      console.error('Error fetching technicians:', error);\n      console.error('Error details:', error.response?.data || error.message);\n    }\n  };\n\n  const handleAssignTicket = (ticketId) => {\n    setSelectedTicket(ticketId);\n    setAssignDialogOpen(true);\n  };\n\n  const handleConfirmAssign = async () => {\n    try {\n      await axios.post(`${API_URL}/tickets/${selectedTicket}/assign`, {\n        technicianId: selectedTechnician\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      const fetchData = async () => {\n        try {\n          const ticketsResponse = await axios.get(`${API_URL}/tickets`, { \n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          \n          if (ticketsResponse.data && Array.isArray(ticketsResponse.data)) {\n            setTickets(ticketsResponse.data);\n          }\n        } catch (error) {\n          console.error('Error fetching tickets after assignment:', error);\n        }\n      };\n      \n      fetchData();\n      setAssignDialogOpen(false);\n      setSelectedTicket(null);\n      setSelectedTechnician('');\n    } catch (error) {\n      console.error('Error assigning ticket:', error);\n      console.error('Error details:', error.response?.data || error.message);\n    }\n  };\n\n  const assignAllUnassignedTickets = async (technicianUsername) => {\n    try {\n      const response = await axios.get(`${API_URL}/users/find?username=${technicianUsername}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      \n      const technician = response.data;\n      if (!technician || !technician._id) {\n        alert(`Technician ${technicianUsername} not found`);\n        return;\n      }\n      \n      const unassignedTickets = tickets.filter(ticket => !ticket.assignedTo);\n      console.log(`Found ${unassignedTickets.length} unassigned tickets to assign to ${technicianUsername}`);\n      \n      if (unassignedTickets.length === 0) {\n        alert('No unassigned tickets found');\n        return;\n      }\n      \n      const assignPromises = unassignedTickets.map(ticket => \n        axios.patch(\n          `${API_URL}/tickets/${ticket._id}/assign`,\n          { technicianId: technician._id },\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n              'Content-Type': 'application/json'\n            }\n          }\n        )\n      );\n      \n      await Promise.all(assignPromises);\n      alert(`Successfully assigned ${unassignedTickets.length} tickets to ${technicianUsername}`);\n      \n      const fetchData = async () => {\n        try {\n          const ticketsResponse = await axios.get(`${API_URL}/tickets`, { \n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          \n          if (ticketsResponse.data && Array.isArray(ticketsResponse.data)) {\n            setTickets(ticketsResponse.data);\n          }\n        } catch (error) {\n          console.error('Error fetching tickets after bulk assignment:', error);\n        }\n      };\n      \n      fetchData();\n    } catch (error) {\n      console.error('Error assigning all unassigned tickets:', error);\n      console.error('Error details:', error.response?.data || error.message);\n      alert(`Failed to assign tickets: ${error.message}`);\n    }\n  };\n\n  const filterTickets = () => {\n    switch (selectedTab) {\n      case 0: // All\n        return tickets;\n      case 1: // Unassigned\n        return tickets.filter(ticket => !ticket.assignedTo);\n      case 2: // Urgent\n        return tickets.filter(ticket => ticket.priority === 'urgent');\n      case 3: // Resolved\n        return tickets.filter(ticket => ticket.status === 'resolved');\n      default:\n        return tickets;\n    }\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      {/* Header */}\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Admin Dashboard\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          Manage support tickets, technicians, and system statistics\n        </Typography>\n      </Paper>\n\n      {/* Stats Section */}\n      <Grid container spacing={3} sx={{ mb: 3 }}>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard \n            title=\"Total Tickets\" \n            value={stats.totalTickets || 0} \n            icon={<TicketIcon />} \n            color=\"primary.main\" \n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard \n            title=\"Total Users\" \n            value={stats.totalUsers || 0} \n            icon={<PeopleIcon />} \n            color=\"info.main\" \n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard \n            title=\"Urgent Tickets\" \n            value={stats.urgentTickets || 0} \n            icon={<UrgentIcon />} \n            color=\"error.main\" \n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard \n            title=\"Resolved Today\" \n            value={stats.resolvedToday || 0} \n            icon={<ResolvedIcon />} \n            color=\"success.main\" \n          />\n        </Grid>\n      </Grid>\n\n      {/* Quick Actions */}\n      <Typography variant=\"h5\" sx={{ mb: 2 }}>Quick Actions</Typography>\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} sm={6} md={4}>\n          <ActionCard \n            title=\"User Management\" \n            description=\"Add, edit, and remove users from the system\" \n            icon={<PeopleIcon />} \n            color=\"#3f51b5\" \n            onClick={() => navigate('/admin/users')} \n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <ActionCard \n            title=\"Client Management\" \n            description=\"View and manage client accounts and tickets\" \n            icon={<ClientsIcon />} \n            color=\"#2196f3\" \n            onClick={() => navigate('/admin/clients')} \n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <ActionCard \n            title=\"System Dashboard\" \n            description=\"View detailed system metrics and performance\" \n            icon={<DashboardIcon />} \n            color=\"#9c27b0\" \n            onClick={() => navigate('/admin/system')} \n          />\n        </Grid>\n      </Grid>\n\n      {/* Tickets Section */}\n      <Paper sx={{ p: 3 }}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\n          <Typography variant=\"h5\" sx={{ mb: 2 }}>\n            Support Tickets\n          </Typography>\n          <Tabs value={selectedTab} onChange={(e, newValue) => setSelectedTab(newValue)}>\n            <Tab label=\"All Tickets\" />\n            <Tab label=\"Unassigned\" />\n            <Tab label=\"Urgent\" />\n            <Tab label=\"Resolved\" />\n          </Tabs>\n        </Box>\n\n        {loading ? (\n          <Typography variant=\"body1\">Loading tickets...</Typography>\n        ) : error ? (\n          <Typography variant=\"body1\" color=\"error\">{error}</Typography>\n        ) : filterTickets().length === 0 ? (\n          <Typography variant=\"body1\">No tickets found in this category.</Typography>\n        ) : (\n          <Box>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"subtitle1\">\n                {filterTickets().length} tickets found\n              </Typography>\n              {selectedTab === 1 && filterTickets().length > 0 && (\n                <Button \n                  variant=\"outlined\" \n                  color=\"primary\" \n                  onClick={() => setAssignAllDialogOpen(true)}\n                >\n                  Assign All to Technician\n                </Button>\n              )}\n            </Box>\n            \n            <TicketList \n              tickets={filterTickets()} \n              isAdmin={true}\n              onAssign={handleAssignTicket}\n            />\n          </Box>\n        )}\n      </Paper>\n\n      {/* Assign Dialog */}\n      <Dialog open={assignDialogOpen} onClose={() => setAssignDialogOpen(false)}>\n        <DialogTitle>Assign Ticket</DialogTitle>\n        <DialogContent>\n          <FormControl fullWidth sx={{ mt: 2 }}>\n            <InputLabel>Technician</InputLabel>\n            <Select\n              value={selectedTechnician}\n              onChange={(e) => setSelectedTechnician(e.target.value)}\n              label=\"Technician\"\n            >\n              {technicians.map((tech) => (\n                <MenuItem key={tech._id} value={tech._id}>\n                  {tech.name || tech.username}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setAssignDialogOpen(false)}>Cancel</Button>\n          <Button onClick={handleConfirmAssign} color=\"primary\" variant=\"contained\">\n            Assign\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Assign All Dialog */}\n      <Dialog open={assignAllDialogOpen} onClose={() => setAssignAllDialogOpen(false)}>\n        <DialogTitle>Assign All Unassigned Tickets</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body2\" sx={{ mb: 2 }}>\n            This will assign all unassigned tickets to the selected technician.\n          </Typography>\n          <FormControl fullWidth>\n            <InputLabel>Technician</InputLabel>\n            <Select\n              value={assignAllTechnician}\n              onChange={(e) => setAssignAllTechnician(e.target.value)}\n              label=\"Technician\"\n            >\n              {technicians.map((tech) => (\n                <MenuItem key={tech._id} value={tech.username}>\n                  {tech.name || tech.username}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setAssignAllDialogOpen(false)}>Cancel</Button>\n          <Button \n            onClick={() => {\n              setAssignAllDialogOpen(false);\n              assignAllUnassignedTickets(assignAllTechnician);\n            }} \n            color=\"primary\" \n            variant=\"contained\"\n            disabled={!assignAllTechnician}\n          >\n            Assign All\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,IAAI,EACJC,KAAK,EACLC,UAAU,EACVC,GAAG,EACHC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,GAAG,EACHC,IAAI,EACJC,MAAM,EACNC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,OAAO,QACF,eAAe;AACtB,SACEC,UAAU,IAAIC,UAAU,EACxBC,MAAM,IAAIC,UAAU,EACpBC,OAAO,IAAIC,UAAU,EACrBC,WAAW,IAAIC,YAAY,EAC3BC,OAAO,IAAIC,WAAW,EACtBC,iBAAiB,IAAIC,WAAW,EAChCC,SAAS,IAAIC,aAAa,QACrB,qBAAqB;AAC5B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,SAASC,OAAO,EAAEC,eAAe,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,IAAI;EAAEC;AAAM,CAAC,kBAC7CL,OAAA,CAACnC,IAAI;EAACyC,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAO,CAAE;EAAAC,QAAA,eAC3BR,OAAA,CAAClC,WAAW;IAAA0C,QAAA,gBACVR,OAAA,CAACpC,GAAG;MAAC0C,EAAE,EAAE;QAAEG,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,gBACvDlD,KAAK,CAACsD,YAAY,CAACR,IAAI,EAAE;QAAEE,EAAE,EAAE;UAAED,KAAK;UAAEQ,EAAE,EAAE;QAAE;MAAE,CAAC,CAAC,eACnDb,OAAA,CAACrC,UAAU;QAAC0C,KAAK,EAAC,eAAe;QAACS,OAAO,EAAC,IAAI;QAAAN,QAAA,EAC3CN;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACNlB,OAAA,CAACrC,UAAU;MAACmD,OAAO,EAAC,IAAI;MAAAN,QAAA,EAAEL;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACV,CACP;AAACC,EAAA,GAZIlB,QAAQ;AAcd,MAAMmB,UAAU,GAAGA,CAAC;EAAElB,KAAK;EAAEmB,WAAW;EAAEjB,IAAI;EAAEC,KAAK;EAAEiB;AAAQ,CAAC,kBAC9DtB,OAAA,CAACnC,IAAI;EACHyC,EAAE,EAAE;IACFC,MAAM,EAAE,MAAM;IACdgB,MAAM,EAAE,SAAS;IACjBC,UAAU,EAAE,iCAAiC;IAC7C,SAAS,EAAE;MACTC,SAAS,EAAE,kBAAkB;MAC7BC,SAAS,EAAE;IACb;EACF,CAAE;EACFJ,OAAO,EAAEA,OAAQ;EAAAd,QAAA,eAEjBR,OAAA,CAAClC,WAAW;IAAA0C,QAAA,gBACVR,OAAA,CAACpC,GAAG;MAAC0C,EAAE,EAAE;QAAEG,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,gBACvDlD,KAAK,CAACsD,YAAY,CAACR,IAAI,EAAE;QAAEE,EAAE,EAAE;UAAED,KAAK;UAAEsB,QAAQ,EAAE,EAAE;UAAEd,EAAE,EAAE;QAAE;MAAE,CAAC,CAAC,eACjEb,OAAA,CAACrC,UAAU;QAACmD,OAAO,EAAC,IAAI;QAACc,UAAU,EAAC,MAAM;QAAApB,QAAA,EACvCN;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACNlB,OAAA,CAACrC,UAAU;MAACmD,OAAO,EAAC,OAAO;MAACT,KAAK,EAAC,gBAAgB;MAAAG,QAAA,EAC/Ca;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACV,CACP;AAACW,GAAA,GAzBIT,UAAU;AA2BhB,MAAMU,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGrC,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACsC,KAAK,EAAEC,QAAQ,CAAC,GAAG3E,QAAQ,CAAC;IACjC4E,YAAY,EAAE,CAAC;IACfC,UAAU,EAAE,CAAC;IACbC,aAAa,EAAE,CAAC;IAChBC,aAAa,EAAE;EACjB,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjF,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkF,WAAW,EAAEC,cAAc,CAAC,GAAGnF,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoF,WAAW,EAAEC,cAAc,CAAC,GAAGrF,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACsF,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvF,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACwF,cAAc,EAAEC,iBAAiB,CAAC,GAAGzF,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC0F,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG3F,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC4F,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG7F,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC8F,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG/F,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACgG,OAAO,EAAEC,UAAU,CAAC,GAAGjG,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkG,KAAK,EAAEC,QAAQ,CAAC,GAAGnG,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMmG,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BH,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACF;QACA,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE;UACVG,OAAO,CAACN,KAAK,CAAC,+BAA+B,CAAC;UAC9CC,QAAQ,CAAC,4CAA4C,CAAC;UACtDF,UAAU,CAAC,KAAK,CAAC;UACjB;QACF;;QAEA;QACA,MAAMQ,OAAO,GAAG;UACdC,aAAa,EAAE,UAAUL,KAAK,EAAE;UAChC,cAAc,EAAE;QAClB,CAAC;QAEDG,OAAO,CAACG,GAAG,CAAC,cAAc,EAAEN,KAAK,CAAC;QAClCG,OAAO,CAACG,GAAG,CAAC,+BAA+B,CAAC;;QAE5C;QACAhC,QAAQ,CAAC;UACPC,YAAY,EAAE,CAAC;UACfC,UAAU,EAAE,EAAE;UACdC,aAAa,EAAE,CAAC;UAChBC,aAAa,EAAE;QACjB,CAAC,CAAC;;QAEF;QACAE,UAAU,CAAC,CACT;UACE2B,GAAG,EAAE,GAAG;UACRjE,KAAK,EAAE,iBAAiB;UACxBkE,MAAM,EAAE,MAAM;UACdC,QAAQ,EAAE,QAAQ;UAClBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;UACnCC,SAAS,EAAE;YAAEC,QAAQ,EAAE,SAAS;YAAEC,SAAS,EAAE,QAAQ;YAAEC,QAAQ,EAAE;UAAO;QAC1E,CAAC,EACD;UACET,GAAG,EAAE,GAAG;UACRjE,KAAK,EAAE,iBAAiB;UACxBkE,MAAM,EAAE,UAAU;UAClBC,QAAQ,EAAE,MAAM;UAChBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;UACnCC,SAAS,EAAE;YAAEC,QAAQ,EAAE,SAAS;YAAEC,SAAS,EAAE,SAAS;YAAEC,QAAQ,EAAE;UAAS;QAC7E,CAAC,CACF,CAAC;;QAEF;QACA,IAAI;UACF,MAAMC,aAAa,GAAG,MAAMnF,KAAK,CAACoF,GAAG,CAAChF,eAAe,CAACiF,SAAS,EAAE;YAAEf;UAAQ,CAAC,CAAC;UAC7ED,OAAO,CAACG,GAAG,CAAC,qBAAqB,EAAEW,aAAa,CAACG,IAAI,CAAC;UACtD,IAAIH,aAAa,CAACG,IAAI,EAAE;YACtB9C,QAAQ,CAAC2C,aAAa,CAACG,IAAI,CAAC;UAC9B;QACF,CAAC,CAAC,OAAOC,UAAU,EAAE;UAAA,IAAAC,oBAAA;UACnBnB,OAAO,CAACN,KAAK,CAAC,uBAAuB,EAAEwB,UAAU,CAAC;UAClDlB,OAAO,CAACN,KAAK,CAAC,gBAAgB,EAAE,EAAAyB,oBAAA,GAAAD,UAAU,CAACE,QAAQ,cAAAD,oBAAA,uBAAnBA,oBAAA,CAAqBF,IAAI,KAAIC,UAAU,CAACG,OAAO,CAAC;QAClF;QAEA,IAAI;UACF,MAAMC,eAAe,GAAG,MAAM3F,KAAK,CAACoF,GAAG,CAAChF,eAAe,CAACwF,OAAO,EAAE;YAAEtB;UAAQ,CAAC,CAAC;UAC7ED,OAAO,CAACG,GAAG,CAAC,uBAAuB,EAAEmB,eAAe,CAACL,IAAI,CAAC;UAC1D,IAAIK,eAAe,CAACL,IAAI,IAAIO,KAAK,CAACC,OAAO,CAACH,eAAe,CAACL,IAAI,CAAC,EAAE;YAC/DxC,UAAU,CAAC6C,eAAe,CAACL,IAAI,CAAC;UAClC;QACF,CAAC,CAAC,OAAOS,YAAY,EAAE;UAAA,IAAAC,qBAAA;UACrB3B,OAAO,CAACN,KAAK,CAAC,yBAAyB,EAAEgC,YAAY,CAAC;UACtD1B,OAAO,CAACN,KAAK,CAAC,gBAAgB,EAAE,EAAAiC,qBAAA,GAAAD,YAAY,CAACN,QAAQ,cAAAO,qBAAA,uBAArBA,qBAAA,CAAuBV,IAAI,KAAIS,YAAY,CAACL,OAAO,CAAC;QACtF;MAEF,CAAC,CAAC,OAAO3B,KAAK,EAAE;QACdM,OAAO,CAACN,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;QACxCC,QAAQ,CAAC,sDAAsD,CAAC;MAClE,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;IACXgC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF5B,OAAO,CAACG,GAAG,CAAC,4BAA4B,EAAE,GAAGrE,OAAO,cAAc,CAAC;MACnE,MAAMsF,QAAQ,GAAG,MAAMzF,KAAK,CAACoF,GAAG,CAAC,GAAGjF,OAAO,cAAc,EAAE;QACzDmE,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,CAAC;MACFC,OAAO,CAACG,GAAG,CAAC,mBAAmB,EAAEiB,QAAQ,CAACH,IAAI,CAAC;MAC/CtC,cAAc,CAACyC,QAAQ,CAACH,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOvB,KAAK,EAAE;MAAA,IAAAmC,eAAA;MACd7B,OAAO,CAACN,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDM,OAAO,CAACN,KAAK,CAAC,gBAAgB,EAAE,EAAAmC,eAAA,GAAAnC,KAAK,CAAC0B,QAAQ,cAAAS,eAAA,uBAAdA,eAAA,CAAgBZ,IAAI,KAAIvB,KAAK,CAAC2B,OAAO,CAAC;IACxE;EACF,CAAC;EAED,MAAMS,kBAAkB,GAAIC,QAAQ,IAAK;IACvC9C,iBAAiB,CAAC8C,QAAQ,CAAC;IAC3BhD,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMiD,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMrG,KAAK,CAACsG,IAAI,CAAC,GAAGnG,OAAO,YAAYkD,cAAc,SAAS,EAAE;QAC9DkD,YAAY,EAAEhD;MAChB,CAAC,EAAE;QACDe,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;UACxD,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,MAAMH,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC5B,IAAI;UACF,MAAM0B,eAAe,GAAG,MAAM3F,KAAK,CAACoF,GAAG,CAAC,GAAGjF,OAAO,UAAU,EAAE;YAC5DmE,OAAO,EAAE;cACPC,aAAa,EAAE,UAAUJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;cACxD,cAAc,EAAE;YAClB;UACF,CAAC,CAAC;UAEF,IAAIuB,eAAe,CAACL,IAAI,IAAIO,KAAK,CAACC,OAAO,CAACH,eAAe,CAACL,IAAI,CAAC,EAAE;YAC/DxC,UAAU,CAAC6C,eAAe,CAACL,IAAI,CAAC;UAClC;QACF,CAAC,CAAC,OAAOvB,KAAK,EAAE;UACdM,OAAO,CAACN,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;QAClE;MACF,CAAC;MAEDE,SAAS,CAAC,CAAC;MACXb,mBAAmB,CAAC,KAAK,CAAC;MAC1BE,iBAAiB,CAAC,IAAI,CAAC;MACvBE,qBAAqB,CAAC,EAAE,CAAC;IAC3B,CAAC,CAAC,OAAOO,KAAK,EAAE;MAAA,IAAAyC,gBAAA;MACdnC,OAAO,CAACN,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CM,OAAO,CAACN,KAAK,CAAC,gBAAgB,EAAE,EAAAyC,gBAAA,GAAAzC,KAAK,CAAC0B,QAAQ,cAAAe,gBAAA,uBAAdA,gBAAA,CAAgBlB,IAAI,KAAIvB,KAAK,CAAC2B,OAAO,CAAC;IACxE;EACF,CAAC;EAED,MAAMe,0BAA0B,GAAG,MAAOC,kBAAkB,IAAK;IAC/D,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMzF,KAAK,CAACoF,GAAG,CAAC,GAAGjF,OAAO,wBAAwBuG,kBAAkB,EAAE,EAAE;QACvFpC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,CAAC;MAEF,MAAMuC,UAAU,GAAGlB,QAAQ,CAACH,IAAI;MAChC,IAAI,CAACqB,UAAU,IAAI,CAACA,UAAU,CAAClC,GAAG,EAAE;QAClCmC,KAAK,CAAC,cAAcF,kBAAkB,YAAY,CAAC;QACnD;MACF;MAEA,MAAMG,iBAAiB,GAAGhE,OAAO,CAACiE,MAAM,CAACC,MAAM,IAAI,CAACA,MAAM,CAACC,UAAU,CAAC;MACtE3C,OAAO,CAACG,GAAG,CAAC,SAASqC,iBAAiB,CAACI,MAAM,oCAAoCP,kBAAkB,EAAE,CAAC;MAEtG,IAAIG,iBAAiB,CAACI,MAAM,KAAK,CAAC,EAAE;QAClCL,KAAK,CAAC,6BAA6B,CAAC;QACpC;MACF;MAEA,MAAMM,cAAc,GAAGL,iBAAiB,CAACM,GAAG,CAACJ,MAAM,IACjD/G,KAAK,CAACoH,KAAK,CACT,GAAGjH,OAAO,YAAY4G,MAAM,CAACtC,GAAG,SAAS,EACzC;QAAE8B,YAAY,EAAEI,UAAU,CAAClC;MAAI,CAAC,EAChC;QACEH,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;UACxD,cAAc,EAAE;QAClB;MACF,CACF,CACF,CAAC;MAED,MAAMiD,OAAO,CAACC,GAAG,CAACJ,cAAc,CAAC;MACjCN,KAAK,CAAC,yBAAyBC,iBAAiB,CAACI,MAAM,eAAeP,kBAAkB,EAAE,CAAC;MAE3F,MAAMzC,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC5B,IAAI;UACF,MAAM0B,eAAe,GAAG,MAAM3F,KAAK,CAACoF,GAAG,CAAC,GAAGjF,OAAO,UAAU,EAAE;YAC5DmE,OAAO,EAAE;cACPC,aAAa,EAAE,UAAUJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;cACxD,cAAc,EAAE;YAClB;UACF,CAAC,CAAC;UAEF,IAAIuB,eAAe,CAACL,IAAI,IAAIO,KAAK,CAACC,OAAO,CAACH,eAAe,CAACL,IAAI,CAAC,EAAE;YAC/DxC,UAAU,CAAC6C,eAAe,CAACL,IAAI,CAAC;UAClC;QACF,CAAC,CAAC,OAAOvB,KAAK,EAAE;UACdM,OAAO,CAACN,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;QACvE;MACF,CAAC;MAEDE,SAAS,CAAC,CAAC;IACb,CAAC,CAAC,OAAOF,KAAK,EAAE;MAAA,IAAAwD,gBAAA;MACdlD,OAAO,CAACN,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MAC/DM,OAAO,CAACN,KAAK,CAAC,gBAAgB,EAAE,EAAAwD,gBAAA,GAAAxD,KAAK,CAAC0B,QAAQ,cAAA8B,gBAAA,uBAAdA,gBAAA,CAAgBjC,IAAI,KAAIvB,KAAK,CAAC2B,OAAO,CAAC;MACtEkB,KAAK,CAAC,6BAA6B7C,KAAK,CAAC2B,OAAO,EAAE,CAAC;IACrD;EACF,CAAC;EAED,MAAM8B,aAAa,GAAGA,CAAA,KAAM;IAC1B,QAAQvE,WAAW;MACjB,KAAK,CAAC;QAAE;QACN,OAAOJ,OAAO;MAChB,KAAK,CAAC;QAAE;QACN,OAAOA,OAAO,CAACiE,MAAM,CAACC,MAAM,IAAI,CAACA,MAAM,CAACC,UAAU,CAAC;MACrD,KAAK,CAAC;QAAE;QACN,OAAOnE,OAAO,CAACiE,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACpC,QAAQ,KAAK,QAAQ,CAAC;MAC/D,KAAK,CAAC;QAAE;QACN,OAAO9B,OAAO,CAACiE,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACrC,MAAM,KAAK,UAAU,CAAC;MAC/D;QACE,OAAO7B,OAAO;IAClB;EACF,CAAC;EAED,oBACEvC,OAAA,CAACpC,GAAG;IAAC0C,EAAE,EAAE;MAAE6G,CAAC,EAAE;IAAE,CAAE;IAAA3G,QAAA,gBAEhBR,OAAA,CAACtC,KAAK;MAAC4C,EAAE,EAAE;QAAE6G,CAAC,EAAE,CAAC;QAAExG,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,gBACzBR,OAAA,CAACrC,UAAU;QAACmD,OAAO,EAAC,IAAI;QAACsG,YAAY;QAAA5G,QAAA,EAAC;MAEtC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACblB,OAAA,CAACrC,UAAU;QAACmD,OAAO,EAAC,OAAO;QAACT,KAAK,EAAC,gBAAgB;QAAAG,QAAA,EAAC;MAEnD;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAGRlB,OAAA,CAACvC,IAAI;MAAC4J,SAAS;MAACC,OAAO,EAAE,CAAE;MAAChH,EAAE,EAAE;QAAEK,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,gBACxCR,OAAA,CAACvC,IAAI;QAAC8J,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAlH,QAAA,eAC9BR,OAAA,CAACC,QAAQ;UACPC,KAAK,EAAC,eAAe;UACrBC,KAAK,EAAE8B,KAAK,CAACE,YAAY,IAAI,CAAE;UAC/B/B,IAAI,eAAEJ,OAAA,CAACnB,UAAU;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACrBb,KAAK,EAAC;QAAc;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACPlB,OAAA,CAACvC,IAAI;QAAC8J,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAlH,QAAA,eAC9BR,OAAA,CAACC,QAAQ;UACPC,KAAK,EAAC,aAAa;UACnBC,KAAK,EAAE8B,KAAK,CAACG,UAAU,IAAI,CAAE;UAC7BhC,IAAI,eAAEJ,OAAA,CAACjB,UAAU;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACrBb,KAAK,EAAC;QAAW;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACPlB,OAAA,CAACvC,IAAI;QAAC8J,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAlH,QAAA,eAC9BR,OAAA,CAACC,QAAQ;UACPC,KAAK,EAAC,gBAAgB;UACtBC,KAAK,EAAE8B,KAAK,CAACI,aAAa,IAAI,CAAE;UAChCjC,IAAI,eAAEJ,OAAA,CAACf,UAAU;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACrBb,KAAK,EAAC;QAAY;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACPlB,OAAA,CAACvC,IAAI;QAAC8J,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAlH,QAAA,eAC9BR,OAAA,CAACC,QAAQ;UACPC,KAAK,EAAC,gBAAgB;UACtBC,KAAK,EAAE8B,KAAK,CAACK,aAAa,IAAI,CAAE;UAChClC,IAAI,eAAEJ,OAAA,CAACb,YAAY;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACvBb,KAAK,EAAC;QAAc;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGPlB,OAAA,CAACrC,UAAU;MAACmD,OAAO,EAAC,IAAI;MAACR,EAAE,EAAE;QAAEK,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,EAAC;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAClElB,OAAA,CAACvC,IAAI;MAAC4J,SAAS;MAACC,OAAO,EAAE,CAAE;MAAChH,EAAE,EAAE;QAAEK,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,gBACxCR,OAAA,CAACvC,IAAI;QAAC8J,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAlH,QAAA,eAC9BR,OAAA,CAACoB,UAAU;UACTlB,KAAK,EAAC,iBAAiB;UACvBmB,WAAW,EAAC,6CAA6C;UACzDjB,IAAI,eAAEJ,OAAA,CAACjB,UAAU;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACrBb,KAAK,EAAC,SAAS;UACfiB,OAAO,EAAEA,CAAA,KAAMU,QAAQ,CAAC,cAAc;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACPlB,OAAA,CAACvC,IAAI;QAAC8J,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAlH,QAAA,eAC9BR,OAAA,CAACoB,UAAU;UACTlB,KAAK,EAAC,mBAAmB;UACzBmB,WAAW,EAAC,6CAA6C;UACzDjB,IAAI,eAAEJ,OAAA,CAACT,WAAW;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACtBb,KAAK,EAAC,SAAS;UACfiB,OAAO,EAAEA,CAAA,KAAMU,QAAQ,CAAC,gBAAgB;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACPlB,OAAA,CAACvC,IAAI;QAAC8J,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAlH,QAAA,eAC9BR,OAAA,CAACoB,UAAU;UACTlB,KAAK,EAAC,kBAAkB;UACxBmB,WAAW,EAAC,8CAA8C;UAC1DjB,IAAI,eAAEJ,OAAA,CAACP,aAAa;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACxBb,KAAK,EAAC,SAAS;UACfiB,OAAO,EAAEA,CAAA,KAAMU,QAAQ,CAAC,eAAe;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGPlB,OAAA,CAACtC,KAAK;MAAC4C,EAAE,EAAE;QAAE6G,CAAC,EAAE;MAAE,CAAE;MAAA3G,QAAA,gBAClBR,OAAA,CAACpC,GAAG;QAAC0C,EAAE,EAAE;UAAEqH,YAAY,EAAE,CAAC;UAAEC,WAAW,EAAE,SAAS;UAAEjH,EAAE,EAAE;QAAE,CAAE;QAAAH,QAAA,gBAC1DR,OAAA,CAACrC,UAAU;UAACmD,OAAO,EAAC,IAAI;UAACR,EAAE,EAAE;YAAEK,EAAE,EAAE;UAAE,CAAE;UAAAH,QAAA,EAAC;QAExC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACblB,OAAA,CAAC/B,IAAI;UAACkC,KAAK,EAAEwC,WAAY;UAACkF,QAAQ,EAAEA,CAACC,CAAC,EAAEC,QAAQ,KAAKnF,cAAc,CAACmF,QAAQ,CAAE;UAAAvH,QAAA,gBAC5ER,OAAA,CAAChC,GAAG;YAACgK,KAAK,EAAC;UAAa;YAAAjH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3BlB,OAAA,CAAChC,GAAG;YAACgK,KAAK,EAAC;UAAY;YAAAjH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC1BlB,OAAA,CAAChC,GAAG;YAACgK,KAAK,EAAC;UAAQ;YAAAjH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtBlB,OAAA,CAAChC,GAAG;YAACgK,KAAK,EAAC;UAAU;YAAAjH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,EAELqC,OAAO,gBACNvD,OAAA,CAACrC,UAAU;QAACmD,OAAO,EAAC,OAAO;QAAAN,QAAA,EAAC;MAAkB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,GACzDuC,KAAK,gBACPzD,OAAA,CAACrC,UAAU;QAACmD,OAAO,EAAC,OAAO;QAACT,KAAK,EAAC,OAAO;QAAAG,QAAA,EAAEiD;MAAK;QAAA1C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,GAC5DgG,aAAa,CAAC,CAAC,CAACP,MAAM,KAAK,CAAC,gBAC9B3G,OAAA,CAACrC,UAAU;QAACmD,OAAO,EAAC,OAAO;QAAAN,QAAA,EAAC;MAAkC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,gBAE3ElB,OAAA,CAACpC,GAAG;QAAA4C,QAAA,gBACFR,OAAA,CAACpC,GAAG;UAAC0C,EAAE,EAAE;YAAEG,OAAO,EAAE,MAAM;YAAEwH,cAAc,EAAE,eAAe;YAAEvH,UAAU,EAAE,QAAQ;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAAH,QAAA,gBACzFR,OAAA,CAACrC,UAAU;YAACmD,OAAO,EAAC,WAAW;YAAAN,QAAA,GAC5B0G,aAAa,CAAC,CAAC,CAACP,MAAM,EAAC,gBAC1B;UAAA;YAAA5F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,EACZyB,WAAW,KAAK,CAAC,IAAIuE,aAAa,CAAC,CAAC,CAACP,MAAM,GAAG,CAAC,iBAC9C3G,OAAA,CAAC9B,MAAM;YACL4C,OAAO,EAAC,UAAU;YAClBT,KAAK,EAAC,SAAS;YACfiB,OAAO,EAAEA,CAAA,KAAM8B,sBAAsB,CAAC,IAAI,CAAE;YAAA5C,QAAA,EAC7C;UAED;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENlB,OAAA,CAACJ,UAAU;UACT2C,OAAO,EAAE2E,aAAa,CAAC,CAAE;UACzBgB,OAAO,EAAE,IAAK;UACdC,QAAQ,EAAEtC;QAAmB;UAAA9E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAGRlB,OAAA,CAAC7B,MAAM;MAACiK,IAAI,EAAEvF,gBAAiB;MAACwF,OAAO,EAAEA,CAAA,KAAMvF,mBAAmB,CAAC,KAAK,CAAE;MAAAtC,QAAA,gBACxER,OAAA,CAAC5B,WAAW;QAAAoC,QAAA,EAAC;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACxClB,OAAA,CAAC3B,aAAa;QAAAmC,QAAA,eACZR,OAAA,CAACzB,WAAW;UAAC+J,SAAS;UAAChI,EAAE,EAAE;YAAEiI,EAAE,EAAE;UAAE,CAAE;UAAA/H,QAAA,gBACnCR,OAAA,CAACxB,UAAU;YAAAgC,QAAA,EAAC;UAAU;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACnClB,OAAA,CAACvB,MAAM;YACL0B,KAAK,EAAE8C,kBAAmB;YAC1B4E,QAAQ,EAAGC,CAAC,IAAK5E,qBAAqB,CAAC4E,CAAC,CAACU,MAAM,CAACrI,KAAK,CAAE;YACvD6H,KAAK,EAAC,YAAY;YAAAxH,QAAA,EAEjBiC,WAAW,CAACoE,GAAG,CAAE4B,IAAI,iBACpBzI,OAAA,CAACtB,QAAQ;cAAgByB,KAAK,EAAEsI,IAAI,CAACtE,GAAI;cAAA3D,QAAA,EACtCiI,IAAI,CAACC,IAAI,IAAID,IAAI,CAAC/D;YAAQ,GADd+D,IAAI,CAACtE,GAAG;cAAApD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEb,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAChBlB,OAAA,CAAC1B,aAAa;QAAAkC,QAAA,gBACZR,OAAA,CAAC9B,MAAM;UAACoD,OAAO,EAAEA,CAAA,KAAMwB,mBAAmB,CAAC,KAAK,CAAE;UAAAtC,QAAA,EAAC;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClElB,OAAA,CAAC9B,MAAM;UAACoD,OAAO,EAAEyE,mBAAoB;UAAC1F,KAAK,EAAC,SAAS;UAACS,OAAO,EAAC,WAAW;UAAAN,QAAA,EAAC;QAE1E;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGTlB,OAAA,CAAC7B,MAAM;MAACiK,IAAI,EAAEjF,mBAAoB;MAACkF,OAAO,EAAEA,CAAA,KAAMjF,sBAAsB,CAAC,KAAK,CAAE;MAAA5C,QAAA,gBAC9ER,OAAA,CAAC5B,WAAW;QAAAoC,QAAA,EAAC;MAA6B;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACxDlB,OAAA,CAAC3B,aAAa;QAAAmC,QAAA,gBACZR,OAAA,CAACrC,UAAU;UAACmD,OAAO,EAAC,OAAO;UAACR,EAAE,EAAE;YAAEK,EAAE,EAAE;UAAE,CAAE;UAAAH,QAAA,EAAC;QAE3C;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACblB,OAAA,CAACzB,WAAW;UAAC+J,SAAS;UAAA9H,QAAA,gBACpBR,OAAA,CAACxB,UAAU;YAAAgC,QAAA,EAAC;UAAU;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACnClB,OAAA,CAACvB,MAAM;YACL0B,KAAK,EAAEkD,mBAAoB;YAC3BwE,QAAQ,EAAGC,CAAC,IAAKxE,sBAAsB,CAACwE,CAAC,CAACU,MAAM,CAACrI,KAAK,CAAE;YACxD6H,KAAK,EAAC,YAAY;YAAAxH,QAAA,EAEjBiC,WAAW,CAACoE,GAAG,CAAE4B,IAAI,iBACpBzI,OAAA,CAACtB,QAAQ;cAAgByB,KAAK,EAAEsI,IAAI,CAAC/D,QAAS;cAAAlE,QAAA,EAC3CiI,IAAI,CAACC,IAAI,IAAID,IAAI,CAAC/D;YAAQ,GADd+D,IAAI,CAACtE,GAAG;cAAApD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEb,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAChBlB,OAAA,CAAC1B,aAAa;QAAAkC,QAAA,gBACZR,OAAA,CAAC9B,MAAM;UAACoD,OAAO,EAAEA,CAAA,KAAM8B,sBAAsB,CAAC,KAAK,CAAE;UAAA5C,QAAA,EAAC;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrElB,OAAA,CAAC9B,MAAM;UACLoD,OAAO,EAAEA,CAAA,KAAM;YACb8B,sBAAsB,CAAC,KAAK,CAAC;YAC7B+C,0BAA0B,CAAC9C,mBAAmB,CAAC;UACjD,CAAE;UACFhD,KAAK,EAAC,SAAS;UACfS,OAAO,EAAC,WAAW;UACnB6H,QAAQ,EAAE,CAACtF,mBAAoB;UAAA7C,QAAA,EAChC;QAED;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACa,EAAA,CAnbID,cAAc;EAAA,QACDnC,WAAW;AAAA;AAAAiJ,GAAA,GADxB9G,cAAc;AAqbpB,eAAeA,cAAc;AAAC,IAAAX,EAAA,EAAAU,GAAA,EAAA+G,GAAA;AAAAC,YAAA,CAAA1H,EAAA;AAAA0H,YAAA,CAAAhH,GAAA;AAAAgH,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}