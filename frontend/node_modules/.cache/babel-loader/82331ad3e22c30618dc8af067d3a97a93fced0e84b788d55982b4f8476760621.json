{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sayda\\\\CascadeProjects\\\\beta-tech-support\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on page load\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      setUser(JSON.parse(userData));\n      // Set default authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n    setLoading(false);\n  }, []);\n  const register = async userData => {\n    try {\n      // Determine the endpoint based on user role\n      const endpoint = userData.role === 'technician' ? `${process.env.REACT_APP_API_URL}/api/auth/technician/signup` : `${process.env.REACT_APP_API_URL}/api/auth/client/signup`;\n      const response = await axios.post(endpoint, userData);\n\n      // Store token and user data\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n\n      // Set default authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.token}`;\n      setUser(response.data.user);\n      return response.data.user;\n    } catch (error) {\n      console.error('Registration error:', error.response || error);\n      throw error;\n    }\n  };\n  const login = async (email, password, userType = 'client') => {\n    try {\n      // Determine the endpoint based on user type\n      const endpoint = userType === 'technician' ? `${process.env.REACT_APP_API_URL}/api/auth/technician/login` : `${process.env.REACT_APP_API_URL}/api/auth/client/login`;\n      const response = await axios.post(endpoint, {\n        email,\n        password\n      });\n\n      // Store token and user data\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n\n      // Set default authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.token}`;\n      setUser(response.data.user);\n      return response.data.user;\n    } catch (error) {\n      console.error('Login error:', error.response || error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    // Remove token and user data from local storage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Remove authorization header\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n  const checkEmailExists = async email => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/auth/check-email?email=${email}`);\n      return response.data.exists;\n    } catch (error) {\n      console.error('Email check error:', error.response || error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      register,\n      login,\n      logout,\n      checkEmailExists\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","defaults","headers","common","register","endpoint","role","process","env","REACT_APP_API_URL","response","post","setItem","data","stringify","error","console","login","email","password","userType","logout","removeItem","checkEmailExists","get","exists","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sayda/CascadeProjects/beta-tech-support/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in on page load\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    \n    if (token && userData) {\n      setUser(JSON.parse(userData));\n      // Set default authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n    \n    setLoading(false);\n  }, []);\n\n  const register = async (userData) => {\n    try {\n      // Determine the endpoint based on user role\n      const endpoint = userData.role === 'technician' \n        ? `${process.env.REACT_APP_API_URL}/api/auth/technician/signup`\n        : `${process.env.REACT_APP_API_URL}/api/auth/client/signup`;\n      \n      const response = await axios.post(endpoint, userData);\n      \n      // Store token and user data\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      \n      // Set default authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.token}`;\n      \n      setUser(response.data.user);\n      return response.data.user;\n    } catch (error) {\n      console.error('Registration error:', error.response || error);\n      throw error;\n    }\n  };\n\n  const login = async (email, password, userType = 'client') => {\n    try {\n      // Determine the endpoint based on user type\n      const endpoint = userType === 'technician'\n        ? `${process.env.REACT_APP_API_URL}/api/auth/technician/login`\n        : `${process.env.REACT_APP_API_URL}/api/auth/client/login`;\n      \n      const response = await axios.post(endpoint, {\n        email,\n        password\n      });\n      \n      // Store token and user data\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      \n      // Set default authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.token}`;\n      \n      setUser(response.data.user);\n      return response.data.user;\n    } catch (error) {\n      console.error('Login error:', error.response || error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    // Remove token and user data from local storage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    \n    // Remove authorization header\n    delete axios.defaults.headers.common['Authorization'];\n    \n    setUser(null);\n  };\n\n  const checkEmailExists = async (email) => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/auth/check-email?email=${email}`);\n      return response.data.exists;\n    } catch (error) {\n      console.error('Email check error:', error.response || error);\n      throw error;\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        loading,\n        register,\n        login,\n        logout,\n        checkEmailExists\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CE,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE7C,IAAIF,KAAK,IAAIG,QAAQ,EAAE;MACrBN,OAAO,CAACO,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC,CAAC;MAC7B;MACAhB,KAAK,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUR,KAAK,EAAE;IACpE;IAEAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,QAAQ,GAAG,MAAON,QAAQ,IAAK;IACnC,IAAI;MACF;MACA,MAAMO,QAAQ,GAAGP,QAAQ,CAACQ,IAAI,KAAK,YAAY,GAC3C,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,6BAA6B,GAC7D,GAAGF,OAAO,CAACC,GAAG,CAACC,iBAAiB,yBAAyB;MAE7D,MAAMC,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,IAAI,CAACN,QAAQ,EAAEP,QAAQ,CAAC;;MAErD;MACAF,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACG,IAAI,CAAClB,KAAK,CAAC;MAClDC,YAAY,CAACgB,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACe,SAAS,CAACJ,QAAQ,CAACG,IAAI,CAACtB,IAAI,CAAC,CAAC;;MAEhE;MACAT,KAAK,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUO,QAAQ,CAACG,IAAI,CAAClB,KAAK,EAAE;MAEhFH,OAAO,CAACkB,QAAQ,CAACG,IAAI,CAACtB,IAAI,CAAC;MAC3B,OAAOmB,QAAQ,CAACG,IAAI,CAACtB,IAAI;IAC3B,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAAC;MAC7D,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,GAAG,QAAQ,KAAK;IAC5D,IAAI;MACF;MACA,MAAMf,QAAQ,GAAGe,QAAQ,KAAK,YAAY,GACtC,GAAGb,OAAO,CAACC,GAAG,CAACC,iBAAiB,4BAA4B,GAC5D,GAAGF,OAAO,CAACC,GAAG,CAACC,iBAAiB,wBAAwB;MAE5D,MAAMC,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,IAAI,CAACN,QAAQ,EAAE;QAC1Ca,KAAK;QACLC;MACF,CAAC,CAAC;;MAEF;MACAvB,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACG,IAAI,CAAClB,KAAK,CAAC;MAClDC,YAAY,CAACgB,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACe,SAAS,CAACJ,QAAQ,CAACG,IAAI,CAACtB,IAAI,CAAC,CAAC;;MAEhE;MACAT,KAAK,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUO,QAAQ,CAACG,IAAI,CAAClB,KAAK,EAAE;MAEhFH,OAAO,CAACkB,QAAQ,CAACG,IAAI,CAACtB,IAAI,CAAC;MAC3B,OAAOmB,QAAQ,CAACG,IAAI,CAACtB,IAAI;IAC3B,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAAC;MACtD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAzB,YAAY,CAAC0B,UAAU,CAAC,OAAO,CAAC;IAChC1B,YAAY,CAAC0B,UAAU,CAAC,MAAM,CAAC;;IAE/B;IACA,OAAOxC,KAAK,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IAErDX,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAM+B,gBAAgB,GAAG,MAAOL,KAAK,IAAK;IACxC,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAM5B,KAAK,CAAC0C,GAAG,CAAC,GAAGjB,OAAO,CAACC,GAAG,CAACC,iBAAiB,+BAA+BS,KAAK,EAAE,CAAC;MACxG,OAAOR,QAAQ,CAACG,IAAI,CAACY,MAAM;IAC7B,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAAC;MAC5D,MAAMA,KAAK;IACb;EACF,CAAC;EAED,oBACE/B,OAAA,CAACC,WAAW,CAACyC,QAAQ;IACnBC,KAAK,EAAE;MACLpC,IAAI;MACJE,OAAO;MACPW,QAAQ;MACRa,KAAK;MACLI,MAAM;MACNE;IACF,CAAE;IAAAlC,QAAA,EAEDA;EAAQ;IAAAuC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzC,GAAA,CAxGWF,YAAY;AAAA4C,EAAA,GAAZ5C,YAAY;AA0GzB,eAAeH,WAAW;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}