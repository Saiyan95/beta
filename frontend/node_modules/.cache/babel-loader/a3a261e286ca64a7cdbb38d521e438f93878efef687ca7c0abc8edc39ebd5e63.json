{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sayda\\\\CascadeProjects\\\\beta-tech-support\\\\frontend\\\\src\\\\pages\\\\tickets\\\\TicketDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { joinTicketRoom, leaveTicketRoom, sendTicketMessage, acceptTicket, onSocketEvent, offSocketEvent } from '../../services/socketService';\nimport axios from 'axios';\nimport { Box, Button, Card, CardContent, CardHeader, Chip, CircularProgress, Divider, Grid, IconButton, List, ListItem, ListItemAvatar, ListItemText, Paper, TextField, Typography, Avatar, Tooltip, Alert, Snackbar, Badge } from '@mui/material';\nimport { Send as SendIcon, Person as PersonIcon, AccessTime as AccessTimeIcon, CheckCircle as CheckCircleIcon, Assignment as AssignmentIcon, Error as ErrorIcon, Info as InfoIcon, Chat as ChatIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicketDetails = () => {\n  _s();\n  var _ticket$status;\n  const {\n    ticketId\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [ticket, setTicket] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const [acceptingTicket, setAcceptingTicket] = useState(false);\n  const [alert, setAlert] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n  const [typingStatus, setTypingStatus] = useState(null);\n  const [typingTimeout, setTypingTimeout] = useState(null);\n  const messagesEndRef = useRef(null);\n  const messageListRef = useRef(null);\n\n  // Fetch ticket details\n  useEffect(() => {\n    const fetchTicket = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/tickets/${ticketId}`);\n        setTicket(response.data);\n        setMessages(response.data.messages || []);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching ticket:', err);\n        setError('Failed to load ticket details. Please try again.');\n        setLoading(false);\n      }\n    };\n    fetchTicket();\n  }, [ticketId]);\n\n  // Socket.io event handlers\n  useEffect(() => {\n    if (!ticketId || !user) return;\n\n    // Join the ticket room\n    joinTicketRoom(ticketId);\n\n    // Handle incoming messages\n    const handleMessageReceived = data => {\n      if (data.ticketId === ticketId) {\n        setMessages(prev => [...prev, data]);\n        // Clear typing status when message is received\n        setTypingStatus(null);\n      }\n    };\n\n    // Handle ticket status updates\n    const handleTicketUpdated = data => {\n      if (data.ticketId === ticketId) {\n        setTicket(prev => ({\n          ...prev,\n          ...data\n        }));\n        // Add system message for status update\n        const systemMessage = {\n          id: `system_${Date.now()}`,\n          ticketId,\n          content: getSystemMessageContent(data),\n          timestamp: new Date().toISOString(),\n          isSystemMessage: true\n        };\n        setMessages(prev => [...prev, systemMessage]);\n\n        // Show alert for ticket update\n        setAlert({\n          open: true,\n          message: getSystemMessageContent(data),\n          severity: 'info'\n        });\n      }\n    };\n\n    // Handle typing status\n    const handleTypingStatus = data => {\n      if (data.ticketId === ticketId && data.userId !== user.userId) {\n        setTypingStatus(data);\n\n        // Clear typing status after 3 seconds of inactivity\n        if (typingTimeout) {\n          clearTimeout(typingTimeout);\n        }\n        const timeout = setTimeout(() => {\n          setTypingStatus(null);\n        }, 3000);\n        setTypingTimeout(timeout);\n      }\n    };\n\n    // Register event listeners\n    onSocketEvent('message_received', handleMessageReceived);\n    onSocketEvent('ticket_updated', handleTicketUpdated);\n    onSocketEvent('ticket_accepted', handleTicketUpdated);\n    onSocketEvent('typing_status', handleTypingStatus);\n\n    // Cleanup function\n    return () => {\n      // Leave the ticket room\n      leaveTicketRoom(ticketId);\n\n      // Remove event listeners\n      offSocketEvent('message_received', handleMessageReceived);\n      offSocketEvent('ticket_updated', handleTicketUpdated);\n      offSocketEvent('ticket_accepted', handleTicketUpdated);\n      offSocketEvent('typing_status', handleTypingStatus);\n\n      // Clear any existing timeout\n      if (typingTimeout) {\n        clearTimeout(typingTimeout);\n      }\n    };\n  }, [ticketId, user, typingTimeout]);\n\n  // Auto-scroll to bottom of messages\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n\n  // Generate system message content based on ticket update\n  const getSystemMessageContent = data => {\n    if (data.status === 'in_progress' && data.assignedTo) {\n      return `Ticket has been assigned to ${data.technicianName || 'a technician'}`;\n    } else if (data.status === 'resolved') {\n      return 'Ticket has been marked as resolved';\n    } else if (data.status === 'closed') {\n      return 'Ticket has been closed';\n    } else if (data.status === 'reopened') {\n      return 'Ticket has been reopened';\n    } else {\n      return `Ticket status updated to ${data.status.replace('_', ' ')}`;\n    }\n  };\n\n  // Handle message input change\n  const handleMessageChange = e => {\n    setNewMessage(e.target.value);\n\n    // Emit typing status\n    if (e.target.value && user) {\n      const socket = window.socket;\n      if (socket) {\n        socket.emit('typing_status', {\n          ticketId,\n          userId: user.userId,\n          userName: user.name\n        });\n      }\n    }\n  };\n\n  // Handle message submission\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    try {\n      setSendingMessage(true);\n\n      // Prepare message data\n      const messageData = {\n        ticketId,\n        content: newMessage,\n        senderId: user.userId,\n        senderName: user.name,\n        senderRole: user.role,\n        timestamp: new Date().toISOString()\n      };\n\n      // Send message via socket\n      await sendTicketMessage(messageData);\n\n      // Clear input\n      setNewMessage('');\n      setSendingMessage(false);\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setAlert({\n        open: true,\n        message: 'Failed to send message. Please try again.',\n        severity: 'error'\n      });\n      setSendingMessage(false);\n    }\n  };\n\n  // Handle ticket acceptance by technician\n  const handleAcceptTicket = async () => {\n    if (!user || user.role !== 'technician') return;\n    try {\n      setAcceptingTicket(true);\n\n      // Prepare acceptance data\n      const acceptanceData = {\n        ticketId,\n        technicianId: user.userId,\n        technicianName: user.name,\n        clientId: ticket.createdBy\n      };\n\n      // Send acceptance via socket\n      await acceptTicket(acceptanceData);\n\n      // Update local ticket state\n      setTicket(prev => ({\n        ...prev,\n        assignedTo: user.userId,\n        status: 'in_progress'\n      }));\n      setAcceptingTicket(false);\n      setAlert({\n        open: true,\n        message: 'Ticket accepted successfully!',\n        severity: 'success'\n      });\n    } catch (err) {\n      console.error('Error accepting ticket:', err);\n      setAlert({\n        open: true,\n        message: 'Failed to accept ticket. Please try again.',\n        severity: 'error'\n      });\n      setAcceptingTicket(false);\n    }\n  };\n\n  // Format timestamp\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleString();\n  };\n\n  // Get status chip color\n  const getStatusColor = status => {\n    switch (status) {\n      case 'open':\n        return 'primary';\n      case 'in_progress':\n        return 'info';\n      case 'resolved':\n        return 'success';\n      case 'closed':\n        return 'default';\n      default:\n        return 'default';\n    }\n  };\n\n  // Get status icon\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'open':\n        return /*#__PURE__*/_jsxDEV(AccessTimeIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 16\n        }, this);\n      case 'in_progress':\n        return /*#__PURE__*/_jsxDEV(AssignmentIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 16\n        }, this);\n      case 'resolved':\n        return /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 16\n        }, this);\n      case 'closed':\n        return /*#__PURE__*/_jsxDEV(InfoIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(InfoIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Handle alert close\n  const handleAlertClose = () => {\n    setAlert({\n      ...alert,\n      open: false\n    });\n  };\n\n  // Render loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          mt: 2\n        },\n        onClick: () => navigate('/tickets'),\n        children: \"Back to Tickets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render ticket details\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: alert.open,\n      autoHideDuration: 6000,\n      onClose: handleAlertClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleAlertClose,\n        severity: alert.severity,\n        children: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Ticket #\", ticket === null || ticket === void 0 ? void 0 : ticket.ticketNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this),\n            subheader: /*#__PURE__*/_jsxDEV(Chip, {\n              icon: getStatusIcon(ticket === null || ticket === void 0 ? void 0 : ticket.status),\n              label: ticket === null || ticket === void 0 ? void 0 : (_ticket$status = ticket.status) === null || _ticket$status === void 0 ? void 0 : _ticket$status.replace('_', ' '),\n              color: getStatusColor(ticket === null || ticket === void 0 ? void 0 : ticket.status),\n              size: \"small\",\n              sx: {\n                mt: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Subject:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this), \" \", ticket === null || ticket === void 0 ? void 0 : ticket.subject]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              paragraph: true,\n              children: ticket === null || ticket === void 0 ? void 0 : ticket.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              gutterBottom: true,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Priority:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this), \" \", ticket === null || ticket === void 0 ? void 0 : ticket.priority]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              gutterBottom: true,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Created:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this), \" \", formatTimestamp(ticket === null || ticket === void 0 ? void 0 : ticket.createdAt)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              gutterBottom: true,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Client:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this), \" \", ticket === null || ticket === void 0 ? void 0 : ticket.clientName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), ticket !== null && ticket !== void 0 && ticket.assignedTo ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              gutterBottom: true,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Assigned To:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), \" \", (ticket === null || ticket === void 0 ? void 0 : ticket.technicianName) || 'Unknown']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this) : (user === null || user === void 0 ? void 0 : user.role) === 'technician' && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              sx: {\n                mt: 2\n              },\n              onClick: handleAcceptTicket,\n              disabled: acceptingTicket,\n              children: acceptingTicket ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 40\n              }, this) : 'Accept Ticket'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: '70vh',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: [/*#__PURE__*/_jsxDEV(ChatIcon, {\n              sx: {\n                mr: 1,\n                verticalAlign: 'middle'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this), \"Conversation\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              overflowY: 'auto',\n              mb: 2,\n              p: 1,\n              bgcolor: 'background.default',\n              borderRadius: 1\n            },\n            ref: messageListRef,\n            children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                textAlign: 'center',\n                p: 3\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: \"No messages yet. Start the conversation!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(List, {\n              children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: message.isSystemMessage ? /*#__PURE__*/_jsxDEV(ListItem, {\n                  sx: {\n                    justifyContent: 'center'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: message.content,\n                    color: \"default\",\n                    size: \"small\",\n                    sx: {\n                      my: 1,\n                      bgcolor: 'background.paper'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(ListItem, {\n                  sx: {\n                    flexDirection: message.senderId === (user === null || user === void 0 ? void 0 : user.userId) ? 'row-reverse' : 'row',\n                    alignItems: 'flex-start',\n                    mb: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                    sx: {\n                      minWidth: 40\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      sx: {\n                        width: 32,\n                        height: 32,\n                        bgcolor: message.senderId === (user === null || user === void 0 ? void 0 : user.userId) ? 'primary.main' : 'secondary.main'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(PersonIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 479,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 472,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      maxWidth: '70%',\n                      bgcolor: message.senderId === (user === null || user === void 0 ? void 0 : user.userId) ? 'primary.light' : 'background.paper',\n                      color: message.senderId === (user === null || user === void 0 ? void 0 : user.userId) ? 'primary.contrastText' : 'text.primary',\n                      p: 2,\n                      borderRadius: 2,\n                      boxShadow: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      children: [message.senderName, /*#__PURE__*/_jsxDEV(Chip, {\n                        label: message.senderRole,\n                        size: \"small\",\n                        sx: {\n                          ml: 1,\n                          height: 20,\n                          '& .MuiChip-label': {\n                            px: 1,\n                            fontSize: '0.625rem'\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 494,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 492,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      children: message.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"inherit\",\n                      sx: {\n                        opacity: 0.7\n                      },\n                      children: formatTimestamp(message.timestamp)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 25\n                }, this)\n              }, message.id || index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 21\n              }, this)), typingStatus && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    p: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: [typingStatus.userName, \" is typing...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: messagesEndRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: handleSendMessage,\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              variant: \"outlined\",\n              placeholder: \"Type your message...\",\n              value: newMessage,\n              onChange: handleMessageChange,\n              disabled: sendingMessage || (ticket === null || ticket === void 0 ? void 0 : ticket.status) === 'closed',\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: (ticket === null || ticket === void 0 ? void 0 : ticket.status) === 'closed' ? 'Ticket is closed' : 'Send message',\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  type: \"submit\",\n                  disabled: !newMessage.trim() || sendingMessage || (ticket === null || ticket === void 0 ? void 0 : ticket.status) === 'closed',\n                  children: sendingMessage ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 24\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 39\n                  }, this) : /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 72\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 5\n  }, this);\n};\n_s(TicketDetails, \"rO2uAvY0Sh+RkUJDMXGRXCj4MVU=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = TicketDetails;\nexport default TicketDetails;\nvar _c;\n$RefreshReg$(_c, \"TicketDetails\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","useAuth","joinTicketRoom","leaveTicketRoom","sendTicketMessage","acceptTicket","onSocketEvent","offSocketEvent","axios","Box","Button","Card","CardContent","CardHeader","Chip","CircularProgress","Divider","Grid","IconButton","List","ListItem","ListItemAvatar","ListItemText","Paper","TextField","Typography","Avatar","Tooltip","Alert","Snackbar","Badge","Send","SendIcon","Person","PersonIcon","AccessTime","AccessTimeIcon","CheckCircle","CheckCircleIcon","Assignment","AssignmentIcon","Error","ErrorIcon","Info","InfoIcon","Chat","ChatIcon","jsxDEV","_jsxDEV","TicketDetails","_s","_ticket$status","ticketId","user","navigate","ticket","setTicket","loading","setLoading","error","setError","messages","setMessages","newMessage","setNewMessage","sendingMessage","setSendingMessage","acceptingTicket","setAcceptingTicket","alert","setAlert","open","message","severity","typingStatus","setTypingStatus","typingTimeout","setTypingTimeout","messagesEndRef","messageListRef","fetchTicket","response","get","process","env","REACT_APP_API_URL","data","err","console","handleMessageReceived","prev","handleTicketUpdated","systemMessage","id","Date","now","content","getSystemMessageContent","timestamp","toISOString","isSystemMessage","handleTypingStatus","userId","clearTimeout","timeout","setTimeout","current","scrollIntoView","behavior","status","assignedTo","technicianName","replace","handleMessageChange","e","target","value","socket","window","emit","userName","name","handleSendMessage","preventDefault","trim","messageData","senderId","senderName","senderRole","role","handleAcceptTicket","acceptanceData","technicianId","clientId","createdBy","formatTimestamp","date","toLocaleString","getStatusColor","getStatusIcon","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","handleAlertClose","sx","display","justifyContent","alignItems","height","children","p","variant","mt","onClick","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","container","spacing","item","xs","md","title","ticketNumber","subheader","icon","label","color","size","gutterBottom","subject","paragraph","description","priority","createdAt","clientName","fullWidth","disabled","flexDirection","mr","verticalAlign","mb","flexGrow","overflowY","bgcolor","borderRadius","ref","length","textAlign","map","index","Fragment","my","minWidth","width","maxWidth","boxShadow","ml","px","opacity","component","onSubmit","placeholder","onChange","type","_c","$RefreshReg$"],"sources":["C:/Users/sayda/CascadeProjects/beta-tech-support/frontend/src/pages/tickets/TicketDetails.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport {\n  joinTicketRoom,\n  leaveTicketRoom,\n  sendTicketMessage,\n  acceptTicket,\n  onSocketEvent,\n  offSocketEvent\n} from '../../services/socketService';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Chip,\n  CircularProgress,\n  Divider,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Paper,\n  TextField,\n  Typography,\n  Avatar,\n  Tooltip,\n  Alert,\n  Snackbar,\n  Badge\n} from '@mui/material';\nimport {\n  Send as SendIcon,\n  Person as PersonIcon,\n  AccessTime as AccessTimeIcon,\n  CheckCircle as CheckCircleIcon,\n  Assignment as AssignmentIcon,\n  Error as ErrorIcon,\n  Info as InfoIcon,\n  Chat as ChatIcon\n} from '@mui/icons-material';\n\nconst TicketDetails = () => {\n  const { ticketId } = useParams();\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [ticket, setTicket] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const [acceptingTicket, setAcceptingTicket] = useState(false);\n  const [alert, setAlert] = useState({ open: false, message: '', severity: 'info' });\n  const [typingStatus, setTypingStatus] = useState(null);\n  const [typingTimeout, setTypingTimeout] = useState(null);\n  const messagesEndRef = useRef(null);\n  const messageListRef = useRef(null);\n\n  // Fetch ticket details\n  useEffect(() => {\n    const fetchTicket = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/tickets/${ticketId}`);\n        setTicket(response.data);\n        setMessages(response.data.messages || []);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching ticket:', err);\n        setError('Failed to load ticket details. Please try again.');\n        setLoading(false);\n      }\n    };\n\n    fetchTicket();\n  }, [ticketId]);\n\n  // Socket.io event handlers\n  useEffect(() => {\n    if (!ticketId || !user) return;\n\n    // Join the ticket room\n    joinTicketRoom(ticketId);\n\n    // Handle incoming messages\n    const handleMessageReceived = (data) => {\n      if (data.ticketId === ticketId) {\n        setMessages(prev => [...prev, data]);\n        // Clear typing status when message is received\n        setTypingStatus(null);\n      }\n    };\n\n    // Handle ticket status updates\n    const handleTicketUpdated = (data) => {\n      if (data.ticketId === ticketId) {\n        setTicket(prev => ({ ...prev, ...data }));\n        // Add system message for status update\n        const systemMessage = {\n          id: `system_${Date.now()}`,\n          ticketId,\n          content: getSystemMessageContent(data),\n          timestamp: new Date().toISOString(),\n          isSystemMessage: true\n        };\n        setMessages(prev => [...prev, systemMessage]);\n        \n        // Show alert for ticket update\n        setAlert({\n          open: true,\n          message: getSystemMessageContent(data),\n          severity: 'info'\n        });\n      }\n    };\n\n    // Handle typing status\n    const handleTypingStatus = (data) => {\n      if (data.ticketId === ticketId && data.userId !== user.userId) {\n        setTypingStatus(data);\n        \n        // Clear typing status after 3 seconds of inactivity\n        if (typingTimeout) {\n          clearTimeout(typingTimeout);\n        }\n        \n        const timeout = setTimeout(() => {\n          setTypingStatus(null);\n        }, 3000);\n        \n        setTypingTimeout(timeout);\n      }\n    };\n\n    // Register event listeners\n    onSocketEvent('message_received', handleMessageReceived);\n    onSocketEvent('ticket_updated', handleTicketUpdated);\n    onSocketEvent('ticket_accepted', handleTicketUpdated);\n    onSocketEvent('typing_status', handleTypingStatus);\n\n    // Cleanup function\n    return () => {\n      // Leave the ticket room\n      leaveTicketRoom(ticketId);\n      \n      // Remove event listeners\n      offSocketEvent('message_received', handleMessageReceived);\n      offSocketEvent('ticket_updated', handleTicketUpdated);\n      offSocketEvent('ticket_accepted', handleTicketUpdated);\n      offSocketEvent('typing_status', handleTypingStatus);\n      \n      // Clear any existing timeout\n      if (typingTimeout) {\n        clearTimeout(typingTimeout);\n      }\n    };\n  }, [ticketId, user, typingTimeout]);\n\n  // Auto-scroll to bottom of messages\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  // Generate system message content based on ticket update\n  const getSystemMessageContent = (data) => {\n    if (data.status === 'in_progress' && data.assignedTo) {\n      return `Ticket has been assigned to ${data.technicianName || 'a technician'}`;\n    } else if (data.status === 'resolved') {\n      return 'Ticket has been marked as resolved';\n    } else if (data.status === 'closed') {\n      return 'Ticket has been closed';\n    } else if (data.status === 'reopened') {\n      return 'Ticket has been reopened';\n    } else {\n      return `Ticket status updated to ${data.status.replace('_', ' ')}`;\n    }\n  };\n\n  // Handle message input change\n  const handleMessageChange = (e) => {\n    setNewMessage(e.target.value);\n    \n    // Emit typing status\n    if (e.target.value && user) {\n      const socket = window.socket;\n      if (socket) {\n        socket.emit('typing_status', {\n          ticketId,\n          userId: user.userId,\n          userName: user.name\n        });\n      }\n    }\n  };\n\n  // Handle message submission\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    try {\n      setSendingMessage(true);\n      \n      // Prepare message data\n      const messageData = {\n        ticketId,\n        content: newMessage,\n        senderId: user.userId,\n        senderName: user.name,\n        senderRole: user.role,\n        timestamp: new Date().toISOString()\n      };\n\n      // Send message via socket\n      await sendTicketMessage(messageData);\n      \n      // Clear input\n      setNewMessage('');\n      setSendingMessage(false);\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setAlert({\n        open: true,\n        message: 'Failed to send message. Please try again.',\n        severity: 'error'\n      });\n      setSendingMessage(false);\n    }\n  };\n\n  // Handle ticket acceptance by technician\n  const handleAcceptTicket = async () => {\n    if (!user || user.role !== 'technician') return;\n\n    try {\n      setAcceptingTicket(true);\n      \n      // Prepare acceptance data\n      const acceptanceData = {\n        ticketId,\n        technicianId: user.userId,\n        technicianName: user.name,\n        clientId: ticket.createdBy\n      };\n\n      // Send acceptance via socket\n      await acceptTicket(acceptanceData);\n      \n      // Update local ticket state\n      setTicket(prev => ({\n        ...prev,\n        assignedTo: user.userId,\n        status: 'in_progress'\n      }));\n      \n      setAcceptingTicket(false);\n      setAlert({\n        open: true,\n        message: 'Ticket accepted successfully!',\n        severity: 'success'\n      });\n    } catch (err) {\n      console.error('Error accepting ticket:', err);\n      setAlert({\n        open: true,\n        message: 'Failed to accept ticket. Please try again.',\n        severity: 'error'\n      });\n      setAcceptingTicket(false);\n    }\n  };\n\n  // Format timestamp\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp);\n    return date.toLocaleString();\n  };\n\n  // Get status chip color\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'open':\n        return 'primary';\n      case 'in_progress':\n        return 'info';\n      case 'resolved':\n        return 'success';\n      case 'closed':\n        return 'default';\n      default:\n        return 'default';\n    }\n  };\n\n  // Get status icon\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'open':\n        return <AccessTimeIcon fontSize=\"small\" />;\n      case 'in_progress':\n        return <AssignmentIcon fontSize=\"small\" />;\n      case 'resolved':\n        return <CheckCircleIcon fontSize=\"small\" />;\n      case 'closed':\n        return <InfoIcon fontSize=\"small\" />;\n      default:\n        return <InfoIcon fontSize=\"small\" />;\n    }\n  };\n\n  // Handle alert close\n  const handleAlertClose = () => {\n    setAlert({ ...alert, open: false });\n  };\n\n  // Render loading state\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Render error state\n  if (error) {\n    return (\n      <Box sx={{ p: 3 }}>\n        <Alert severity=\"error\">{error}</Alert>\n        <Button variant=\"contained\" sx={{ mt: 2 }} onClick={() => navigate('/tickets')}>\n          Back to Tickets\n        </Button>\n      </Box>\n    );\n  }\n\n  // Render ticket details\n  return (\n    <Box sx={{ p: 3 }}>\n      <Snackbar \n        open={alert.open} \n        autoHideDuration={6000} \n        onClose={handleAlertClose}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <Alert onClose={handleAlertClose} severity={alert.severity}>\n          {alert.message}\n        </Alert>\n      </Snackbar>\n      \n      <Grid container spacing={3}>\n        {/* Ticket details card */}\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardHeader \n              title={\n                <Typography variant=\"h6\">\n                  Ticket #{ticket?.ticketNumber}\n                </Typography>\n              } \n              subheader={\n                <Chip \n                  icon={getStatusIcon(ticket?.status)} \n                  label={ticket?.status?.replace('_', ' ')} \n                  color={getStatusColor(ticket?.status)}\n                  size=\"small\"\n                  sx={{ mt: 1 }}\n                />\n              }\n            />\n            <Divider />\n            <CardContent>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                <strong>Subject:</strong> {ticket?.subject}\n              </Typography>\n              \n              <Typography variant=\"body1\" paragraph>\n                {ticket?.description}\n              </Typography>\n              \n              <Typography variant=\"subtitle2\" gutterBottom>\n                <strong>Priority:</strong> {ticket?.priority}\n              </Typography>\n              \n              <Typography variant=\"subtitle2\" gutterBottom>\n                <strong>Created:</strong> {formatTimestamp(ticket?.createdAt)}\n              </Typography>\n              \n              <Typography variant=\"subtitle2\" gutterBottom>\n                <strong>Client:</strong> {ticket?.clientName}\n              </Typography>\n              \n              {ticket?.assignedTo ? (\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  <strong>Assigned To:</strong> {ticket?.technicianName || 'Unknown'}\n                </Typography>\n              ) : (\n                user?.role === 'technician' && (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    sx={{ mt: 2 }}\n                    onClick={handleAcceptTicket}\n                    disabled={acceptingTicket}\n                  >\n                    {acceptingTicket ? <CircularProgress size={24} /> : 'Accept Ticket'}\n                  </Button>\n                )\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n        \n        {/* Messages section */}\n        <Grid item xs={12} md={8}>\n          <Paper sx={{ p: 2, height: '70vh', display: 'flex', flexDirection: 'column' }}>\n            <Typography variant=\"h6\" gutterBottom>\n              <ChatIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\n              Conversation\n            </Typography>\n            <Divider sx={{ mb: 2 }} />\n            \n            {/* Messages list */}\n            <Box \n              sx={{ \n                flexGrow: 1, \n                overflowY: 'auto', \n                mb: 2,\n                p: 1,\n                bgcolor: 'background.default',\n                borderRadius: 1\n              }}\n              ref={messageListRef}\n            >\n              {messages.length === 0 ? (\n                <Box sx={{ textAlign: 'center', p: 3 }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    No messages yet. Start the conversation!\n                  </Typography>\n                </Box>\n              ) : (\n                <List>\n                  {messages.map((message, index) => (\n                    <React.Fragment key={message.id || index}>\n                      {message.isSystemMessage ? (\n                        <ListItem sx={{ justifyContent: 'center' }}>\n                          <Chip \n                            label={message.content}\n                            color=\"default\"\n                            size=\"small\"\n                            sx={{ my: 1, bgcolor: 'background.paper' }}\n                          />\n                        </ListItem>\n                      ) : (\n                        <ListItem\n                          sx={{\n                            flexDirection: message.senderId === user?.userId ? 'row-reverse' : 'row',\n                            alignItems: 'flex-start',\n                            mb: 1\n                          }}\n                        >\n                          <ListItemAvatar sx={{ minWidth: 40 }}>\n                            <Avatar \n                              sx={{ \n                                width: 32, \n                                height: 32,\n                                bgcolor: message.senderId === user?.userId ? 'primary.main' : 'secondary.main'\n                              }}\n                            >\n                              <PersonIcon fontSize=\"small\" />\n                            </Avatar>\n                          </ListItemAvatar>\n                          <Box\n                            sx={{\n                              maxWidth: '70%',\n                              bgcolor: message.senderId === user?.userId ? 'primary.light' : 'background.paper',\n                              color: message.senderId === user?.userId ? 'primary.contrastText' : 'text.primary',\n                              p: 2,\n                              borderRadius: 2,\n                              boxShadow: 1\n                            }}\n                          >\n                            <Typography variant=\"subtitle2\">\n                              {message.senderName} \n                              <Chip \n                                label={message.senderRole} \n                                size=\"small\" \n                                sx={{ \n                                  ml: 1, \n                                  height: 20, \n                                  '& .MuiChip-label': { \n                                    px: 1, \n                                    fontSize: '0.625rem' \n                                  } \n                                }} \n                              />\n                            </Typography>\n                            <Typography variant=\"body1\">{message.content}</Typography>\n                            <Typography variant=\"caption\" color=\"inherit\" sx={{ opacity: 0.7 }}>\n                              {formatTimestamp(message.timestamp)}\n                            </Typography>\n                          </Box>\n                        </ListItem>\n                      )}\n                    </React.Fragment>\n                  ))}\n                  {typingStatus && (\n                    <ListItem>\n                      <Box sx={{ p: 1 }}>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {typingStatus.userName} is typing...\n                        </Typography>\n                      </Box>\n                    </ListItem>\n                  )}\n                  <div ref={messagesEndRef} />\n                </List>\n              )}\n            </Box>\n            \n            {/* Message input */}\n            <Box component=\"form\" onSubmit={handleSendMessage} sx={{ display: 'flex', alignItems: 'center' }}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                placeholder=\"Type your message...\"\n                value={newMessage}\n                onChange={handleMessageChange}\n                disabled={sendingMessage || ticket?.status === 'closed'}\n                sx={{ mr: 1 }}\n              />\n              <Tooltip title={ticket?.status === 'closed' ? 'Ticket is closed' : 'Send message'}>\n                <span>\n                  <IconButton \n                    color=\"primary\" \n                    type=\"submit\" \n                    disabled={!newMessage.trim() || sendingMessage || ticket?.status === 'closed'}\n                  >\n                    {sendingMessage ? <CircularProgress size={24} /> : <SendIcon />}\n                  </IconButton>\n                </span>\n              </Tooltip>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TicketDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}