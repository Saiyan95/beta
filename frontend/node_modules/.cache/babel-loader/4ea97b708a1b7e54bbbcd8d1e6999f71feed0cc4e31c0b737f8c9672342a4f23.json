{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sayda\\\\CascadeProjects\\\\beta-tech-support\\\\frontend\\\\src\\\\pages\\\\tickets\\\\CreateTicket.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { Box, Button, Container, FormControl, FormHelperText, Grid, InputLabel, MenuItem, Paper, Select, TextField, Typography, Alert, Snackbar, CircularProgress, Checkbox, FormControlLabel, Stack } from '@mui/material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useTickets } from '../../contexts/TicketContext';\nimport { TICKET_ENDPOINTS, API_URL } from '../../utils/apiConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTicket = () => {\n  _s();\n  var _productTypes$formDat;\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const {\n    addTicket\n  } = useTickets();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [createdTicketId, setCreatedTicketId] = useState(null);\n  const [createdTicketNumber, setCreatedTicketNumber] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [formData, setFormData] = useState({\n    category: '',\n    productType: '',\n    productName: '',\n    serialNumber: '',\n    warrantyStatus: false,\n    warrantyExpiry: '',\n    priority: 'medium',\n    description: '',\n    numberOfUsers: 1\n  });\n  const [validation, setValidation] = useState({\n    category: {\n      error: false,\n      message: ''\n    },\n    description: {\n      error: false,\n      message: ''\n    },\n    priority: {\n      error: false,\n      message: ''\n    }\n  });\n\n  // Category options\n  const categories = ['Hardware', 'Software', 'Network', 'Account', 'Other'];\n\n  // Product type options based on category\n  const productTypes = {\n    Hardware: ['Laptop', 'Desktop', 'Printer', 'Server', 'Mobile Device', 'Other'],\n    Software: ['Kaspersky', 'Sophos', 'Fortinet', 'Microsoft', 'Barracuda', 'Operating System', 'Application', 'Database', 'Security', 'Other'],\n    Network: ['Internet', 'Intranet', 'VPN', 'Email', 'Other'],\n    Account: ['Password Reset', 'Access Request', 'Permission Issue', 'Other'],\n    Other: ['General Inquiry', 'Training Request', 'Feedback', 'Other']\n  };\n\n  // Priority options\n  const priorities = [{\n    value: 'low',\n    label: 'Low'\n  }, {\n    value: 'medium',\n    label: 'Medium'\n  }, {\n    value: 'high',\n    label: 'High'\n  }, {\n    value: 'urgent',\n    label: 'Urgent'\n  }, {\n    value: 'critical',\n    label: 'Critical'\n  }];\n\n  // Validate form fields\n  const validateForm = () => {\n    let isValid = true;\n    const newValidation = {\n      ...validation\n    };\n\n    // Validate category\n    if (!formData.category) {\n      newValidation.category = {\n        error: true,\n        message: 'Category is required'\n      };\n      isValid = false;\n    } else {\n      newValidation.category = {\n        error: false,\n        message: ''\n      };\n    }\n\n    // Description is now optional, only validate length if provided\n    if (formData.description && formData.description.length > 1000) {\n      newValidation.description = {\n        error: true,\n        message: 'Description cannot exceed 1000 characters'\n      };\n      isValid = false;\n    } else {\n      newValidation.description = {\n        error: false,\n        message: ''\n      };\n    }\n\n    // Validate priority\n    if (!formData.priority) {\n      newValidation.priority = {\n        error: true,\n        message: 'Priority is required'\n      };\n      isValid = false;\n    } else {\n      newValidation.priority = {\n        error: false,\n        message: ''\n      };\n    }\n    setValidation(newValidation);\n    return isValid;\n  };\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n\n    // Handle checkbox inputs\n    if (type === 'checkbox') {\n      setFormData({\n        ...formData,\n        [name]: checked\n      });\n      return;\n    }\n\n    // Reset product type when category changes\n    if (name === 'category') {\n      setFormData({\n        ...formData,\n        [name]: value,\n        productType: ''\n      });\n\n      // Clear category validation error when value is selected\n      if (value) {\n        setValidation({\n          ...validation,\n          category: {\n            error: false,\n            message: ''\n          }\n        });\n      }\n      return;\n    }\n\n    // Validate description length\n    if (name === 'description') {\n      if (value.length > 1000) {\n        setValidation({\n          ...validation,\n          description: {\n            error: true,\n            message: 'Description cannot exceed 1000 characters'\n          }\n        });\n      } else {\n        setValidation({\n          ...validation,\n          description: {\n            error: false,\n            message: ''\n          }\n        });\n      }\n    }\n\n    // Clear priority validation error when value is selected\n    if (name === 'priority' && value) {\n      setValidation({\n        ...validation,\n        priority: {\n          error: false,\n          message: ''\n        }\n      });\n    }\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate form before submission\n    if (!validateForm()) {\n      setError('Please fix the errors before submitting');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      // Log detailed information for debugging\n      console.log('Form data being submitted:', formData);\n      console.log('API endpoint:', TICKET_ENDPOINTS.CREATE);\n      console.log('Using API URL:', API_URL);\n      console.log('User info:', user);\n\n      // Properly structure the data for backend processing\n      const submissionData = {\n        category: formData.category,\n        priority: formData.priority,\n        description: formData.description,\n        numberOfUsers: formData.numberOfUsers || 1,\n        // Structure product data properly according to Ticket model\n        product: {\n          name: formData.productName || formData.category || 'Unknown Product',\n          type: formData.productType || '',\n          serialNumber: formData.serialNumber || '',\n          warrantyStatus: {\n            inWarranty: formData.warrantyStatus || false,\n            expiryDate: formData.warrantyStatus && formData.warrantyExpiry ? formData.warrantyExpiry : null\n          }\n        },\n        // Add client information directly to the ticket for easier access\n        clientInfo: {\n          firstName: user.firstName,\n          lastName: user.lastName,\n          companyName: user.companyName,\n          username: user.username,\n          department: user.department,\n          phoneNumber: user.phoneNumber\n        }\n      };\n      console.log('Submission data after preprocessing:', submissionData);\n      console.log('Auth token present:', !!localStorage.getItem('token'));\n      const response = await axios.post(TICKET_ENDPOINTS.CREATE, submissionData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        },\n        // Add timeout to prevent hanging requests\n        timeout: 10000\n      });\n      console.log('Ticket creation response:', response.data);\n      if (response.data.ticket) {\n        setSuccess(true);\n        setCreatedTicketId(response.data.ticket._id);\n        setCreatedTicketNumber(response.data.ticket.ticketNumber);\n\n        // Show success message briefly before redirecting\n        setSuccessMessage(`Ticket ${response.data.ticket.ticketNumber} created successfully!`);\n\n        // Add the new ticket to our local tickets state\n        console.log('Adding ticket to dashboard state:', response.data.ticket);\n        addTicket(response.data.ticket);\n\n        // Determine correct dashboard path based on user role\n        const dashboardPath = user.role === 'client' ? '/client/dashboard' : user.role === 'technician' ? '/technician/dashboard' : '/admin/dashboard';\n\n        // Clear form data on success\n        setFormData({\n          category: '',\n          productType: '',\n          productName: '',\n          serialNumber: '',\n          warrantyStatus: false,\n          warrantyExpiry: '',\n          priority: 'medium',\n          description: '',\n          numberOfUsers: 1\n        });\n\n        // Redirect to dashboard after a brief delay\n        setTimeout(() => {\n          navigate(dashboardPath);\n        }, 1500);\n      } else {\n        // Handle unexpected success response format\n        setError('Unexpected response format from server');\n        console.error('Unexpected response format:', response.data);\n      }\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n      setSuccess(false);\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        console.error('Response data:', error.response.data);\n        console.error('Response status:', error.response.status);\n        console.error('Response headers:', error.response.headers);\n        setError(error.response.data.message || 'Error creating ticket');\n        setConnectionStatus('Connected, but received an error response');\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error('No response received - Request:', error.request);\n        setError('No response received from server. Please try again later.');\n        setConnectionStatus('Connection failed - no response');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Request setup error:', error.message);\n        setError('Error creating ticket: ' + error.message);\n        setConnectionStatus('Request setup failed');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check API connectivity when component mounts\n  useEffect(() => {\n    const checkConnection = async () => {\n      try {\n        setConnectionStatus('checking');\n\n        // Log connection details\n        console.log('Checking API connection to:', API_URL);\n        console.log('Auth token:', localStorage.getItem('token') ? 'Present' : 'Missing');\n\n        // Attempt a simple request to verify connection\n        const response = await axios.get(`${API_URL}/api/auth/verify`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          },\n          timeout: 5000\n        });\n        console.log('Connection check response:', response.data);\n        setConnectionStatus('connected');\n      } catch (err) {\n        console.error('API connection check failed:', err);\n        if (err.response) {\n          console.log('Response status:', err.response.status);\n          console.log('Response data:', err.response.data);\n\n          // Auth error but connection works\n          if (err.response.status === 401) {\n            setConnectionStatus('auth_error');\n          } else {\n            setConnectionStatus('error');\n          }\n        } else if (err.request) {\n          // No response received - likely connection issue\n          console.log('No response received from server');\n          setConnectionStatus('no_connection');\n        } else {\n          setConnectionStatus('unknown_error');\n        }\n      }\n    };\n    checkConnection();\n  }, []);\n\n  // Handle snackbar close\n  const handleCloseSnackbar = () => {\n    setError(null);\n    setSuccess(false);\n  };\n\n  // Handle view ticket button click\n  const handleViewTicket = () => {\n    if (createdTicketId) {\n      navigate(`/tickets/${createdTicketId}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [connectionStatus && connectionStatus !== 'connected' && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mt: 2\n      },\n      children: [connectionStatus === 'checking' && 'Checking connection to API server...', connectionStatus === 'no_connection' && 'Cannot connect to the API server. Please check if the server is running on port 5002.', connectionStatus === 'auth_error' && 'Connected to API server but authentication failed. Please log in again.', connectionStatus === 'error' && 'Error connecting to API server. Check console for details.', connectionStatus === 'unknown_error' && 'Unknown error occurred during API connection check.']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4,\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Create Support Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              error: validation.category.error,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"category-label\",\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"category-label\",\n                id: \"category\",\n                name: \"category\",\n                value: formData.category,\n                onChange: handleChange,\n                label: \"Category\",\n                children: categories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: category,\n                  children: category\n                }, category, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this), validation.category.error && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: true,\n                children: validation.category.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              disabled: !formData.category,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"productType-label\",\n                children: \"Product Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"productType-label\",\n                id: \"productType\",\n                name: \"productType\",\n                value: formData.productType,\n                onChange: handleChange,\n                label: \"Product Type\",\n                children: formData.category && ((_productTypes$formDat = productTypes[formData.category]) === null || _productTypes$formDat === void 0 ? void 0 : _productTypes$formDat.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type,\n                  children: type\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 21\n                }, this)))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"productName\",\n              name: \"productName\",\n              label: \"Product Name\",\n              value: formData.productName,\n              onChange: handleChange,\n              placeholder: formData.category ? `Enter ${formData.category.toLowerCase()} name` : 'Enter product name'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"serialNumber\",\n              name: \"serialNumber\",\n              label: \"Serial Number (optional)\",\n              value: formData.serialNumber,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: formData.warrantyStatus,\n                onChange: handleChange,\n                name: \"warrantyStatus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 19\n              }, this),\n              label: \"Product is under warranty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"warrantyExpiry\",\n              name: \"warrantyExpiry\",\n              label: \"Warranty Expiry Date\",\n              type: \"date\",\n              value: formData.warrantyExpiry,\n              onChange: handleChange,\n              disabled: !formData.warrantyStatus,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"numberOfUsers\",\n              name: \"numberOfUsers\",\n              label: \"Number of Users Affected\",\n              type: \"number\",\n              value: formData.numberOfUsers,\n              onChange: handleChange,\n              inputProps: {\n                min: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              error: validation.priority.error,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"priority-label\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"priority-label\",\n                id: \"priority\",\n                name: \"priority\",\n                value: formData.priority,\n                onChange: handleChange,\n                label: \"Priority\",\n                children: priorities.map(priority => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: priority.value,\n                  children: priority.label\n                }, priority.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: validation.priority.error,\n                children: validation.priority.error ? validation.priority.message : 'Select the appropriate priority level for your issue'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"description\",\n              name: \"description\",\n              label: \"Description (optional)\",\n              multiline: true,\n              rows: 4,\n              value: formData.description,\n              onChange: handleChange,\n              error: validation.description.error,\n              helperText: validation.description.error ? validation.description.message : `${formData.description.length}/1000 characters`,\n              inputProps: {\n                maxLength: 1000\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'flex-end'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                disabled: loading,\n                sx: {\n                  mt: 2\n                },\n                children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 30\n                }, this) : 'Submit Ticket'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: success,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          size: \"small\",\n          onClick: handleViewTicket,\n          children: \"View Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 13\n        }, this),\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 414,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTicket, \"/BIE4hiXKPX6WfdvE11UHN0lsrA=\", false, function () {\n  return [useNavigate, useAuth, useTickets];\n});\n_c = CreateTicket;\nexport default CreateTicket;\nvar _c;\n$RefreshReg$(_c, \"CreateTicket\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Box","Button","Container","FormControl","FormHelperText","Grid","InputLabel","MenuItem","Paper","Select","TextField","Typography","Alert","Snackbar","CircularProgress","Checkbox","FormControlLabel","Stack","useAuth","useTickets","TICKET_ENDPOINTS","API_URL","jsxDEV","_jsxDEV","CreateTicket","_s","_productTypes$formDat","navigate","user","addTicket","loading","setLoading","error","setError","success","setSuccess","createdTicketId","setCreatedTicketId","createdTicketNumber","setCreatedTicketNumber","connectionStatus","setConnectionStatus","successMessage","setSuccessMessage","formData","setFormData","category","productType","productName","serialNumber","warrantyStatus","warrantyExpiry","priority","description","numberOfUsers","validation","setValidation","message","categories","productTypes","Hardware","Software","Network","Account","Other","priorities","value","label","validateForm","isValid","newValidation","length","handleChange","e","name","type","checked","target","handleSubmit","preventDefault","console","log","CREATE","submissionData","product","inWarranty","expiryDate","clientInfo","firstName","lastName","companyName","username","department","phoneNumber","localStorage","getItem","response","post","headers","Authorization","timeout","data","ticket","_id","ticketNumber","dashboardPath","role","setTimeout","status","request","checkConnection","get","err","handleCloseSnackbar","handleViewTicket","maxWidth","children","severity","sx","mt","fileName","_jsxFileName","lineNumber","columnNumber","elevation","p","variant","component","gutterBottom","onSubmit","noValidate","container","spacing","item","xs","sm","fullWidth","required","id","labelId","onChange","map","disabled","placeholder","toLowerCase","control","InputLabelProps","shrink","inputProps","min","multiline","rows","helperText","maxLength","display","justifyContent","color","size","open","autoHideDuration","onClose","width","anchorOrigin","vertical","horizontal","action","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sayda/CascadeProjects/beta-tech-support/frontend/src/pages/tickets/CreateTicket.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Container,\n  FormControl,\n  FormHelperText,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  TextField,\n  Typography,\n  Alert,\n  Snackbar,\n  CircularProgress,\n  Checkbox,\n  FormControlLabel,\n  Stack\n} from '@mui/material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useTickets } from '../../contexts/TicketContext';\nimport { TICKET_ENDPOINTS, API_URL } from '../../utils/apiConfig';\n\nconst CreateTicket = () => {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const { addTicket } = useTickets();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [createdTicketId, setCreatedTicketId] = useState(null);\n  const [createdTicketNumber, setCreatedTicketNumber] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  const [formData, setFormData] = useState({\n    category: '',\n    productType: '',\n    productName: '',\n    serialNumber: '',\n    warrantyStatus: false,\n    warrantyExpiry: '',\n    priority: 'medium',\n    description: '',\n    numberOfUsers: 1\n  });\n\n  const [validation, setValidation] = useState({\n    category: {\n      error: false,\n      message: ''\n    },\n    description: {\n      error: false,\n      message: ''\n    },\n    priority: {\n      error: false,\n      message: ''\n    }\n  });\n\n  // Category options\n  const categories = [\n    'Hardware',\n    'Software',\n    'Network',\n    'Account',\n    'Other'\n  ];\n\n  // Product type options based on category\n  const productTypes = {\n    Hardware: ['Laptop', 'Desktop', 'Printer', 'Server', 'Mobile Device', 'Other'],\n    Software: ['Kaspersky', 'Sophos', 'Fortinet', 'Microsoft', 'Barracuda', 'Operating System', 'Application', 'Database', 'Security', 'Other'],\n    Network: ['Internet', 'Intranet', 'VPN', 'Email', 'Other'],\n    Account: ['Password Reset', 'Access Request', 'Permission Issue', 'Other'],\n    Other: ['General Inquiry', 'Training Request', 'Feedback', 'Other']\n  };\n\n  // Priority options\n  const priorities = [\n    { value: 'low', label: 'Low' },\n    { value: 'medium', label: 'Medium' },\n    { value: 'high', label: 'High' },\n    { value: 'urgent', label: 'Urgent' },\n    { value: 'critical', label: 'Critical' }\n  ];\n\n  // Validate form fields\n  const validateForm = () => {\n    let isValid = true;\n    const newValidation = { ...validation };\n    \n    // Validate category\n    if (!formData.category) {\n      newValidation.category = {\n        error: true,\n        message: 'Category is required'\n      };\n      isValid = false;\n    } else {\n      newValidation.category = {\n        error: false,\n        message: ''\n      };\n    }\n    \n    // Description is now optional, only validate length if provided\n    if (formData.description && formData.description.length > 1000) {\n      newValidation.description = {\n        error: true,\n        message: 'Description cannot exceed 1000 characters'\n      };\n      isValid = false;\n    } else {\n      newValidation.description = {\n        error: false,\n        message: ''\n      };\n    }\n    \n    // Validate priority\n    if (!formData.priority) {\n      newValidation.priority = {\n        error: true,\n        message: 'Priority is required'\n      };\n      isValid = false;\n    } else {\n      newValidation.priority = {\n        error: false,\n        message: ''\n      };\n    }\n    \n    setValidation(newValidation);\n    return isValid;\n  };\n\n  // Handle input changes\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    \n    // Handle checkbox inputs\n    if (type === 'checkbox') {\n      setFormData({\n        ...formData,\n        [name]: checked\n      });\n      return;\n    }\n    \n    // Reset product type when category changes\n    if (name === 'category') {\n      setFormData({\n        ...formData,\n        [name]: value,\n        productType: ''\n      });\n      \n      // Clear category validation error when value is selected\n      if (value) {\n        setValidation({\n          ...validation,\n          category: {\n            error: false,\n            message: ''\n          }\n        });\n      }\n      return;\n    }\n    \n    // Validate description length\n    if (name === 'description') {\n      if (value.length > 1000) {\n        setValidation({\n          ...validation,\n          description: {\n            error: true,\n            message: 'Description cannot exceed 1000 characters'\n          }\n        });\n      } else {\n        setValidation({\n          ...validation,\n          description: {\n            error: false,\n            message: ''\n          }\n        });\n      }\n    }\n    \n    // Clear priority validation error when value is selected\n    if (name === 'priority' && value) {\n      setValidation({\n        ...validation,\n        priority: {\n          error: false,\n          message: ''\n        }\n      });\n    }\n    \n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate form before submission\n    if (!validateForm()) {\n      setError('Please fix the errors before submitting');\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Log detailed information for debugging\n      console.log('Form data being submitted:', formData);\n      console.log('API endpoint:', TICKET_ENDPOINTS.CREATE);\n      console.log('Using API URL:', API_URL);\n      console.log('User info:', user);\n      \n      // Properly structure the data for backend processing\n      const submissionData = {\n        category: formData.category,\n        priority: formData.priority,\n        description: formData.description,\n        numberOfUsers: formData.numberOfUsers || 1,\n        // Structure product data properly according to Ticket model\n        product: {\n          name: formData.productName || formData.category || 'Unknown Product',\n          type: formData.productType || '',\n          serialNumber: formData.serialNumber || '',\n          warrantyStatus: {\n            inWarranty: formData.warrantyStatus || false,\n            expiryDate: formData.warrantyStatus && formData.warrantyExpiry ? formData.warrantyExpiry : null\n          }\n        },\n        // Add client information directly to the ticket for easier access\n        clientInfo: {\n          firstName: user.firstName,\n          lastName: user.lastName,\n          companyName: user.companyName,\n          username: user.username,\n          department: user.department,\n          phoneNumber: user.phoneNumber\n        }\n      };\n      \n      console.log('Submission data after preprocessing:', submissionData);\n      console.log('Auth token present:', !!localStorage.getItem('token'));\n      \n      const response = await axios.post(\n        TICKET_ENDPOINTS.CREATE,\n        submissionData,\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n            'Content-Type': 'application/json'\n          },\n          // Add timeout to prevent hanging requests\n          timeout: 10000\n        }\n      );\n      \n      console.log('Ticket creation response:', response.data);\n      \n      if (response.data.ticket) {\n        setSuccess(true);\n        setCreatedTicketId(response.data.ticket._id);\n        setCreatedTicketNumber(response.data.ticket.ticketNumber);\n        \n        // Show success message briefly before redirecting\n        setSuccessMessage(`Ticket ${response.data.ticket.ticketNumber} created successfully!`);\n        \n        // Add the new ticket to our local tickets state\n        console.log('Adding ticket to dashboard state:', response.data.ticket);\n        addTicket(response.data.ticket);\n        \n        // Determine correct dashboard path based on user role\n        const dashboardPath = user.role === 'client' \n          ? '/client/dashboard' \n          : user.role === 'technician' \n            ? '/technician/dashboard' \n            : '/admin/dashboard';\n        \n        // Clear form data on success\n        setFormData({\n          category: '',\n          productType: '',\n          productName: '',\n          serialNumber: '',\n          warrantyStatus: false,\n          warrantyExpiry: '',\n          priority: 'medium',\n          description: '',\n          numberOfUsers: 1\n        });\n        \n        // Redirect to dashboard after a brief delay\n        setTimeout(() => {\n          navigate(dashboardPath);\n        }, 1500);\n      } else {\n        // Handle unexpected success response format\n        setError('Unexpected response format from server');\n        console.error('Unexpected response format:', response.data);\n      }\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n      setSuccess(false);\n      \n      if (error.response) {\n        // The request was made and the server responded with a status code\n        console.error('Response data:', error.response.data);\n        console.error('Response status:', error.response.status);\n        console.error('Response headers:', error.response.headers);\n        \n        setError(error.response.data.message || 'Error creating ticket');\n        setConnectionStatus('Connected, but received an error response');\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error('No response received - Request:', error.request);\n        setError('No response received from server. Please try again later.');\n        setConnectionStatus('Connection failed - no response');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Request setup error:', error.message);\n        setError('Error creating ticket: ' + error.message);\n        setConnectionStatus('Request setup failed');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check API connectivity when component mounts\n  useEffect(() => {\n    const checkConnection = async () => {\n      try {\n        setConnectionStatus('checking');\n        \n        // Log connection details\n        console.log('Checking API connection to:', API_URL);\n        console.log('Auth token:', localStorage.getItem('token') ? 'Present' : 'Missing');\n        \n        // Attempt a simple request to verify connection\n        const response = await axios.get(\n          `${API_URL}/api/auth/verify`,\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            },\n            timeout: 5000\n          }\n        );\n        \n        console.log('Connection check response:', response.data);\n        setConnectionStatus('connected');\n      } catch (err) {\n        console.error('API connection check failed:', err);\n        \n        if (err.response) {\n          console.log('Response status:', err.response.status);\n          console.log('Response data:', err.response.data);\n          \n          // Auth error but connection works\n          if (err.response.status === 401) {\n            setConnectionStatus('auth_error');\n          } else {\n            setConnectionStatus('error');\n          }\n        } else if (err.request) {\n          // No response received - likely connection issue\n          console.log('No response received from server');\n          setConnectionStatus('no_connection');\n        } else {\n          setConnectionStatus('unknown_error');\n        }\n      }\n    };\n    \n    checkConnection();\n  }, []);\n\n  // Handle snackbar close\n  const handleCloseSnackbar = () => {\n    setError(null);\n    setSuccess(false);\n  };\n\n  // Handle view ticket button click\n  const handleViewTicket = () => {\n    if (createdTicketId) {\n      navigate(`/tickets/${createdTicketId}`);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      {connectionStatus && connectionStatus !== 'connected' && (\n        <Alert severity=\"warning\" sx={{ mt: 2 }}>\n          {connectionStatus === 'checking' && 'Checking connection to API server...'}\n          {connectionStatus === 'no_connection' && 'Cannot connect to the API server. Please check if the server is running on port 5002.'}\n          {connectionStatus === 'auth_error' && 'Connected to API server but authentication failed. Please log in again.'}\n          {connectionStatus === 'error' && 'Error connecting to API server. Check console for details.'}\n          {connectionStatus === 'unknown_error' && 'Unknown error occurred during API connection check.'}\n        </Alert>\n      )}\n      \n      <Paper elevation={3} sx={{ p: 4, mt: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Create Support Ticket\n        </Typography>\n        \n        <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n          <Grid container spacing={3}>\n            {/* Category Selection */}\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth required error={validation.category.error}>\n                <InputLabel id=\"category-label\">Category</InputLabel>\n                <Select\n                  labelId=\"category-label\"\n                  id=\"category\"\n                  name=\"category\"\n                  value={formData.category}\n                  onChange={handleChange}\n                  label=\"Category\"\n                >\n                  {categories.map((category) => (\n                    <MenuItem key={category} value={category}>\n                      {category}\n                    </MenuItem>\n                  ))}\n                </Select>\n                {validation.category.error && (\n                  <FormHelperText error>{validation.category.message}</FormHelperText>\n                )}\n              </FormControl>\n            </Grid>\n            \n            {/* Product Type Selection (conditional) */}\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth disabled={!formData.category}>\n                <InputLabel id=\"productType-label\">Product Type</InputLabel>\n                <Select\n                  labelId=\"productType-label\"\n                  id=\"productType\"\n                  name=\"productType\"\n                  value={formData.productType}\n                  onChange={handleChange}\n                  label=\"Product Type\"\n                >\n                  {formData.category && productTypes[formData.category]?.map((type) => (\n                    <MenuItem key={type} value={type}>\n                      {type}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            \n            {/* Product Name */}\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                id=\"productName\"\n                name=\"productName\"\n                label=\"Product Name\"\n                value={formData.productName}\n                onChange={handleChange}\n                placeholder={formData.category ? `Enter ${formData.category.toLowerCase()} name` : 'Enter product name'}\n              />\n            </Grid>\n            \n            {/* Serial Number (optional) */}\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                id=\"serialNumber\"\n                name=\"serialNumber\"\n                label=\"Serial Number (optional)\"\n                value={formData.serialNumber}\n                onChange={handleChange}\n              />\n            </Grid>\n            \n            {/* Warranty Status */}\n            <Grid item xs={12} sm={6}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={formData.warrantyStatus}\n                    onChange={handleChange}\n                    name=\"warrantyStatus\"\n                  />\n                }\n                label=\"Product is under warranty\"\n              />\n            </Grid>\n            \n            {/* Warranty Expiry (conditional) */}\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                id=\"warrantyExpiry\"\n                name=\"warrantyExpiry\"\n                label=\"Warranty Expiry Date\"\n                type=\"date\"\n                value={formData.warrantyExpiry}\n                onChange={handleChange}\n                disabled={!formData.warrantyStatus}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            \n            {/* Number of Users Affected */}\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                id=\"numberOfUsers\"\n                name=\"numberOfUsers\"\n                label=\"Number of Users Affected\"\n                type=\"number\"\n                value={formData.numberOfUsers}\n                onChange={handleChange}\n                inputProps={{ min: 1 }}\n              />\n            </Grid>\n            \n            {/* Priority Selection */}\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth required error={validation.priority.error}>\n                <InputLabel id=\"priority-label\">Priority</InputLabel>\n                <Select\n                  labelId=\"priority-label\"\n                  id=\"priority\"\n                  name=\"priority\"\n                  value={formData.priority}\n                  onChange={handleChange}\n                  label=\"Priority\"\n                >\n                  {priorities.map((priority) => (\n                    <MenuItem key={priority.value} value={priority.value}>\n                      {priority.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <FormHelperText error={validation.priority.error}>\n                  {validation.priority.error \n                    ? validation.priority.message \n                    : 'Select the appropriate priority level for your issue'}\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n            \n            {/* Description */}\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                id=\"description\"\n                name=\"description\"\n                label=\"Description (optional)\"\n                multiline\n                rows={4}\n                value={formData.description}\n                onChange={handleChange}\n                error={validation.description.error}\n                helperText={validation.description.error \n                  ? validation.description.message \n                  : `${formData.description.length}/1000 characters`}\n                inputProps={{ maxLength: 1000 }}\n              />\n            </Grid>\n            \n            {/* Submit Button */}\n            <Grid item xs={12}>\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={loading}\n                  sx={{ mt: 2 }}\n                >\n                  {loading ? <CircularProgress size={24} /> : 'Submit Ticket'}\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n      \n      {/* Error Snackbar */}\n      <Snackbar open={!!error} autoHideDuration={6000} onClose={handleCloseSnackbar}>\n        <Alert onClose={handleCloseSnackbar} severity=\"error\" sx={{ width: '100%' }}>\n          {error}\n        </Alert>\n      </Snackbar>\n      \n      {/* Success Snackbar */}\n      <Snackbar \n        open={success} \n        autoHideDuration={6000} \n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert \n          onClose={handleCloseSnackbar} \n          severity=\"success\" \n          sx={{ width: '100%' }}\n          action={\n            <Button color=\"inherit\" size=\"small\" onClick={handleViewTicket}>\n              View Ticket\n            </Button>\n          }\n        >\n          {successMessage}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default CreateTicket;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}