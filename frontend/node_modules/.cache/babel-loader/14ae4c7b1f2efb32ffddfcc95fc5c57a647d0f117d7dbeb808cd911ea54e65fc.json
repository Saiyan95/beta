{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sayda\\\\CascadeProjects\\\\beta-tech-support\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { getSocket, closeSocket } from '../services/socketService';\nimport { API_URL } from '../utils/apiConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Helper to log detailed errors\n  const logErrorDetails = (error, context) => {\n    console.error(`${context} - Error:`, error.message);\n    if (error.response) {\n      console.error(`${context} - Status:`, error.response.status);\n      console.error(`${context} - Response data:`, error.response.data);\n    }\n    if (error.request) {\n      console.error(`${context} - No response received, request data:`, error.request);\n    }\n  };\n  useEffect(() => {\n    // Check if user is logged in on page load\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      const parsedUser = JSON.parse(userData);\n      setUser(parsedUser);\n      // Set default authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Initialize socket connection with auth token\n      initializeSocket(token);\n    }\n    setLoading(false);\n  }, []);\n\n  // Initialize socket with authentication token\n  const initializeSocket = token => {\n    try {\n      const socket = getSocket();\n      // Set auth token for socket connection\n      socket.auth = {\n        token\n      };\n      // Connect if not already connected\n      if (socket.disconnected) {\n        socket.connect();\n      }\n    } catch (error) {\n      console.error('Socket initialization error:', error);\n    }\n  };\n\n  // Register a new user\n  const register = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Registering with data:', {\n        ...userData,\n        password: '[HIDDEN]'\n      });\n      console.log('API URL being used:', API_URL);\n\n      // Validate required fields before sending to the server\n      const requiredFields = ['username', 'email', 'password', 'firstName', 'lastName'];\n      const missingFields = requiredFields.filter(field => !userData[field]);\n      if (missingFields.length > 0) {\n        const errorMsg = `Missing required fields: ${missingFields.join(', ')}`;\n        console.error(errorMsg);\n        throw new Error(errorMsg);\n      }\n\n      // Updated endpoint to match backend expectations\n      const response = await axios.post(`${API_URL}/auth/register`, userData);\n      console.log('Registration response:', response.data);\n\n      // Handle response based on structure\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Store auth data\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // Set default header for future requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Update state\n      setUser(user);\n\n      // Initialize socket with the new token\n      initializeSocket(token);\n      return user;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      logErrorDetails(error, 'Registration');\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async (email, password, role) => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log(`Attempting login for ${email}`);\n      console.log('Role requested:', role); // Debug role parameter\n      console.log('API URL being used for login:', `${API_URL}/auth/login`);\n\n      // Use correct login API endpoint\n      const response = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      console.log('Login response:', response.data);\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Verify role matches if role parameter was provided\n      if (role && user.role !== role) {\n        console.error(`Role mismatch: Expected ${role}, got ${user.role}`);\n        throw new Error(`Unauthorized: ${role} access only`);\n      }\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // Set default header for future requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n\n      // Initialize socket with the new token\n      initializeSocket(token);\n      return user;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      logErrorDetails(error, 'Login');\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Remove auth header\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n\n    // Close socket connection\n    closeSocket();\n  };\n\n  // Provide auth context values\n  const value = {\n    user,\n    loading,\n    error,\n    register,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","getSocket","closeSocket","API_URL","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","logErrorDetails","context","console","message","response","status","data","request","token","localStorage","getItem","userData","parsedUser","JSON","parse","defaults","headers","common","initializeSocket","socket","auth","disconnected","connect","register","log","password","requiredFields","missingFields","filter","field","length","errorMsg","join","Error","post","setItem","stringify","_error$response","_error$response$data","login","email","role","_error$response2","_error$response2$data","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sayda/CascadeProjects/beta-tech-support/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { getSocket, closeSocket } from '../services/socketService';\nimport { API_URL } from '../utils/apiConfig';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Helper to log detailed errors\n  const logErrorDetails = (error, context) => {\n    console.error(`${context} - Error:`, error.message);\n    if (error.response) {\n      console.error(`${context} - Status:`, error.response.status);\n      console.error(`${context} - Response data:`, error.response.data);\n    }\n    if (error.request) {\n      console.error(`${context} - No response received, request data:`, error.request);\n    }\n  };\n\n  useEffect(() => {\n    // Check if user is logged in on page load\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    \n    if (token && userData) {\n      const parsedUser = JSON.parse(userData);\n      setUser(parsedUser);\n      // Set default authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      // Initialize socket connection with auth token\n      initializeSocket(token);\n    }\n    \n    setLoading(false);\n  }, []);\n\n  // Initialize socket with authentication token\n  const initializeSocket = (token) => {\n    try {\n      const socket = getSocket();\n      // Set auth token for socket connection\n      socket.auth = { token };\n      // Connect if not already connected\n      if (socket.disconnected) {\n        socket.connect();\n      }\n    } catch (error) {\n      console.error('Socket initialization error:', error);\n    }\n  };\n\n  // Register a new user\n  const register = async (userData) => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Registering with data:', {...userData, password: '[HIDDEN]'});\n      console.log('API URL being used:', API_URL);\n      \n      // Validate required fields before sending to the server\n      const requiredFields = ['username', 'email', 'password', 'firstName', 'lastName'];\n      const missingFields = requiredFields.filter(field => !userData[field]);\n      \n      if (missingFields.length > 0) {\n        const errorMsg = `Missing required fields: ${missingFields.join(', ')}`;\n        console.error(errorMsg);\n        throw new Error(errorMsg);\n      }\n      \n      // Updated endpoint to match backend expectations\n      const response = await axios.post(\n        `${API_URL}/auth/register`,\n        userData\n      );\n\n      console.log('Registration response:', response.data);\n      \n      // Handle response based on structure\n      const { user, token } = response.data;\n      \n      // Store auth data\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      \n      // Set default header for future requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      // Update state\n      setUser(user);\n      \n      // Initialize socket with the new token\n      initializeSocket(token);\n      \n      return user;\n    } catch (error) {\n      logErrorDetails(error, 'Registration');\n      setError(error.response?.data?.message || error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async (email, password, role) => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log(`Attempting login for ${email}`);\n      console.log('Role requested:', role); // Debug role parameter\n      console.log('API URL being used for login:', `${API_URL}/auth/login`);\n      \n      // Use correct login API endpoint\n      const response = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n\n      console.log('Login response:', response.data);\n      \n      const { user, token } = response.data;\n      \n      // Verify role matches if role parameter was provided\n      if (role && user.role !== role) {\n        console.error(`Role mismatch: Expected ${role}, got ${user.role}`);\n        throw new Error(`Unauthorized: ${role} access only`);\n      }\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      \n      // Set default header for future requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      setUser(user);\n      \n      // Initialize socket with the new token\n      initializeSocket(token);\n      \n      return user;\n    } catch (error) {\n      logErrorDetails(error, 'Login');\n      setError(error.response?.data?.message || error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    \n    // Remove auth header\n    delete axios.defaults.headers.common['Authorization'];\n    \n    setUser(null);\n    \n    // Close socket connection\n    closeSocket();\n  };\n\n  // Provide auth context values\n  const value = {\n    user,\n    loading,\n    error,\n    register,\n    login,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}