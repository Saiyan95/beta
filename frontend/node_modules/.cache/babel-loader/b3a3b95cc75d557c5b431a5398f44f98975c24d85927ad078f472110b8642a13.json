{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sayda\\\\CascadeProjects\\\\beta-tech-support\\\\frontend\\\\src\\\\pages\\\\tickets\\\\CreateTicket.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { Box, Button, Container, FormControl, FormHelperText, Grid, InputLabel, MenuItem, Paper, Select, TextField, Typography, Alert, Snackbar, CircularProgress, Checkbox, FormControlLabel, Stack } from '@mui/material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { TICKET_ENDPOINTS } from '../../utils/apiConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTicket = () => {\n  _s();\n  var _productTypes$formDat;\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [createdTicketId, setCreatedTicketId] = useState(null);\n  const [createdTicketNumber, setCreatedTicketNumber] = useState(null);\n  const [formData, setFormData] = useState({\n    category: '',\n    productType: '',\n    productName: '',\n    serialNumber: '',\n    warrantyStatus: false,\n    warrantyExpiry: '',\n    priority: 'medium',\n    description: '',\n    numberOfUsers: 1\n  });\n  const [validation, setValidation] = useState({\n    category: {\n      error: false,\n      message: ''\n    },\n    description: {\n      error: false,\n      message: ''\n    },\n    priority: {\n      error: false,\n      message: ''\n    }\n  });\n\n  // Category options\n  const categories = ['Hardware', 'Software', 'Network', 'Account', 'Other'];\n\n  // Product type options based on category\n  const productTypes = {\n    Hardware: ['Laptop', 'Desktop', 'Printer', 'Server', 'Mobile Device', 'Other'],\n    Software: ['Operating System', 'Application', 'Database', 'Security', 'Other'],\n    Network: ['Internet', 'Intranet', 'VPN', 'Email', 'Other'],\n    Account: ['Password Reset', 'Access Request', 'Permission Issue', 'Other'],\n    Other: ['General Inquiry', 'Training Request', 'Feedback', 'Other']\n  };\n\n  // Priority options\n  const priorities = [{\n    value: 'low',\n    label: 'Low'\n  }, {\n    value: 'medium',\n    label: 'Medium'\n  }, {\n    value: 'high',\n    label: 'High'\n  }, {\n    value: 'urgent',\n    label: 'Urgent'\n  }, {\n    value: 'critical',\n    label: 'Critical'\n  }];\n\n  // Validate form fields\n  const validateForm = () => {\n    let isValid = true;\n    const newValidation = {\n      ...validation\n    };\n\n    // Validate category\n    if (!formData.category) {\n      newValidation.category = {\n        error: true,\n        message: 'Category is required'\n      };\n      isValid = false;\n    } else {\n      newValidation.category = {\n        error: false,\n        message: ''\n      };\n    }\n\n    // Validate description\n    if (!formData.description) {\n      newValidation.description = {\n        error: true,\n        message: 'Description is required'\n      };\n      isValid = false;\n    } else if (formData.description.length > 1000) {\n      newValidation.description = {\n        error: true,\n        message: 'Description cannot exceed 1000 characters'\n      };\n      isValid = false;\n    } else {\n      newValidation.description = {\n        error: false,\n        message: ''\n      };\n    }\n\n    // Validate priority\n    if (!formData.priority) {\n      newValidation.priority = {\n        error: true,\n        message: 'Priority is required'\n      };\n      isValid = false;\n    } else {\n      newValidation.priority = {\n        error: false,\n        message: ''\n      };\n    }\n    setValidation(newValidation);\n    return isValid;\n  };\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n\n    // Handle checkbox inputs\n    if (type === 'checkbox') {\n      setFormData({\n        ...formData,\n        [name]: checked\n      });\n      return;\n    }\n\n    // Reset product type when category changes\n    if (name === 'category') {\n      setFormData({\n        ...formData,\n        [name]: value,\n        productType: ''\n      });\n\n      // Clear category validation error when value is selected\n      if (value) {\n        setValidation({\n          ...validation,\n          category: {\n            error: false,\n            message: ''\n          }\n        });\n      }\n      return;\n    }\n\n    // Validate description length\n    if (name === 'description') {\n      if (value.length > 1000) {\n        setValidation({\n          ...validation,\n          description: {\n            error: true,\n            message: 'Description cannot exceed 1000 characters'\n          }\n        });\n      } else {\n        setValidation({\n          ...validation,\n          description: {\n            error: false,\n            message: ''\n          }\n        });\n      }\n    }\n\n    // Clear priority validation error when value is selected\n    if (name === 'priority' && value) {\n      setValidation({\n        ...validation,\n        priority: {\n          error: false,\n          message: ''\n        }\n      });\n    }\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate form before submission\n    if (!validateForm()) {\n      setError('Please fix the errors before submitting');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Submitting ticket with data:', formData);\n      console.log('API endpoint:', TICKET_ENDPOINTS.CREATE);\n      const response = await axios.post(TICKET_ENDPOINTS.CREATE, formData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Ticket creation response:', response.data);\n      if (response.data.success) {\n        setSuccess(true);\n        setCreatedTicketId(response.data.ticket._id);\n        setCreatedTicketNumber(response.data.ticket.ticketNumber);\n\n        // Clear form data on success\n        setFormData({\n          category: '',\n          productType: '',\n          productName: '',\n          serialNumber: '',\n          warrantyStatus: false,\n          warrantyExpiry: '',\n          priority: 'medium',\n          description: '',\n          numberOfUsers: 1\n        });\n      } else {\n        // Handle unexpected success response format\n        setError('Ticket created but with unexpected response format');\n        console.warn('Unexpected response format:', response.data);\n      }\n    } catch (err) {\n      console.error('Error creating ticket:', err);\n\n      // Extract error message from response\n      let errorMessage = 'An error occurred while creating the ticket';\n      if (err.response) {\n        console.error('Error response data:', err.response.data);\n        console.error('Error response status:', err.response.status);\n        if (err.response.data && err.response.data.message) {\n          errorMessage = err.response.data.message;\n        } else if (err.response.status === 400) {\n          errorMessage = 'Invalid ticket data. Please check your inputs.';\n        } else if (err.response.status === 401) {\n          errorMessage = 'Authentication error. Please log in again.';\n        } else if (err.response.status === 500) {\n          errorMessage = 'Server error. Please try again later.';\n        }\n      } else if (err.request) {\n        console.error('No response received from server');\n        errorMessage = 'No response from server. Please check your connection.';\n      } else {\n        console.error('Error setting up request:', err.message);\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle snackbar close\n  const handleCloseSnackbar = () => {\n    setError(null);\n    setSuccess(false);\n  };\n\n  // Handle view ticket button click\n  const handleViewTicket = () => {\n    if (createdTicketId) {\n      navigate(`/tickets/${createdTicketId}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4,\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Create Support Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              error: validation.category.error,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"category-label\",\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"category-label\",\n                id: \"category\",\n                name: \"category\",\n                value: formData.category,\n                onChange: handleChange,\n                label: \"Category\",\n                children: categories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: category,\n                  children: category\n                }, category, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this), validation.category.error && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: true,\n                children: validation.category.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              disabled: !formData.category,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"productType-label\",\n                children: \"Product Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"productType-label\",\n                id: \"productType\",\n                name: \"productType\",\n                value: formData.productType,\n                onChange: handleChange,\n                label: \"Product Type\",\n                children: formData.category && ((_productTypes$formDat = productTypes[formData.category]) === null || _productTypes$formDat === void 0 ? void 0 : _productTypes$formDat.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type,\n                  children: type\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 21\n                }, this)))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"productName\",\n              name: \"productName\",\n              label: \"Product Name\",\n              value: formData.productName,\n              onChange: handleChange,\n              placeholder: formData.category ? `Enter ${formData.category.toLowerCase()} name` : 'Enter product name'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"serialNumber\",\n              name: \"serialNumber\",\n              label: \"Serial Number (optional)\",\n              value: formData.serialNumber,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: formData.warrantyStatus,\n                onChange: handleChange,\n                name: \"warrantyStatus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this),\n              label: \"Product is under warranty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"warrantyExpiry\",\n              name: \"warrantyExpiry\",\n              label: \"Warranty Expiry Date\",\n              type: \"date\",\n              value: formData.warrantyExpiry,\n              onChange: handleChange,\n              disabled: !formData.warrantyStatus,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"numberOfUsers\",\n              name: \"numberOfUsers\",\n              label: \"Number of Users Affected\",\n              type: \"number\",\n              value: formData.numberOfUsers,\n              onChange: handleChange,\n              inputProps: {\n                min: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              error: validation.priority.error,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"priority-label\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"priority-label\",\n                id: \"priority\",\n                name: \"priority\",\n                value: formData.priority,\n                onChange: handleChange,\n                label: \"Priority\",\n                children: priorities.map(priority => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: priority.value,\n                  children: priority.label\n                }, priority.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: validation.priority.error,\n                children: validation.priority.error ? validation.priority.message : 'Select the appropriate priority level for your issue'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"description\",\n              name: \"description\",\n              label: \"Description\",\n              multiline: true,\n              rows: 4,\n              value: formData.description,\n              onChange: handleChange,\n              required: true,\n              error: validation.description.error,\n              helperText: validation.description.error ? validation.description.message : `${formData.description.length}/1000 characters`,\n              inputProps: {\n                maxLength: 1000\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'flex-end'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                disabled: loading,\n                sx: {\n                  mt: 2\n                },\n                children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 30\n                }, this) : 'Submit Ticket'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: success,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          size: \"small\",\n          onClick: handleViewTicket,\n          children: \"View Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this),\n        children: createdTicketNumber ? `Ticket #${createdTicketNumber} created successfully!` : 'Ticket created successfully!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTicket, \"gHGoTfPxRL+havVFRbzGeDYU+Vk=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = CreateTicket;\nexport default CreateTicket;\nvar _c;\n$RefreshReg$(_c, \"CreateTicket\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Box","Button","Container","FormControl","FormHelperText","Grid","InputLabel","MenuItem","Paper","Select","TextField","Typography","Alert","Snackbar","CircularProgress","Checkbox","FormControlLabel","Stack","useAuth","TICKET_ENDPOINTS","jsxDEV","_jsxDEV","CreateTicket","_s","_productTypes$formDat","navigate","user","loading","setLoading","error","setError","success","setSuccess","createdTicketId","setCreatedTicketId","createdTicketNumber","setCreatedTicketNumber","formData","setFormData","category","productType","productName","serialNumber","warrantyStatus","warrantyExpiry","priority","description","numberOfUsers","validation","setValidation","message","categories","productTypes","Hardware","Software","Network","Account","Other","priorities","value","label","validateForm","isValid","newValidation","length","handleChange","e","name","type","checked","target","handleSubmit","preventDefault","console","log","CREATE","response","post","headers","Authorization","localStorage","getItem","data","ticket","_id","ticketNumber","warn","err","errorMessage","status","request","handleCloseSnackbar","handleViewTicket","maxWidth","children","elevation","sx","p","mt","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","container","spacing","item","xs","sm","fullWidth","required","id","labelId","onChange","map","disabled","placeholder","toLowerCase","control","InputLabelProps","shrink","inputProps","min","multiline","rows","helperText","maxLength","display","justifyContent","color","size","open","autoHideDuration","onClose","severity","width","anchorOrigin","vertical","horizontal","action","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sayda/CascadeProjects/beta-tech-support/frontend/src/pages/tickets/CreateTicket.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Container,\n  FormControl,\n  FormHelperText,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  TextField,\n  Typography,\n  Alert,\n  Snackbar,\n  CircularProgress,\n  Checkbox,\n  FormControlLabel,\n  Stack\n} from '@mui/material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { TICKET_ENDPOINTS } from '../../utils/apiConfig';\n\nconst CreateTicket = () => {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [createdTicketId, setCreatedTicketId] = useState(null);\n  const [createdTicketNumber, setCreatedTicketNumber] = useState(null);\n\n  const [formData, setFormData] = useState({\n    category: '',\n    productType: '',\n    productName: '',\n    serialNumber: '',\n    warrantyStatus: false,\n    warrantyExpiry: '',\n    priority: 'medium',\n    description: '',\n    numberOfUsers: 1\n  });\n\n  const [validation, setValidation] = useState({\n    category: {\n      error: false,\n      message: ''\n    },\n    description: {\n      error: false,\n      message: ''\n    },\n    priority: {\n      error: false,\n      message: ''\n    }\n  });\n\n  // Category options\n  const categories = [\n    'Hardware',\n    'Software',\n    'Network',\n    'Account',\n    'Other'\n  ];\n\n  // Product type options based on category\n  const productTypes = {\n    Hardware: ['Laptop', 'Desktop', 'Printer', 'Server', 'Mobile Device', 'Other'],\n    Software: ['Operating System', 'Application', 'Database', 'Security', 'Other'],\n    Network: ['Internet', 'Intranet', 'VPN', 'Email', 'Other'],\n    Account: ['Password Reset', 'Access Request', 'Permission Issue', 'Other'],\n    Other: ['General Inquiry', 'Training Request', 'Feedback', 'Other']\n  };\n\n  // Priority options\n  const priorities = [\n    { value: 'low', label: 'Low' },\n    { value: 'medium', label: 'Medium' },\n    { value: 'high', label: 'High' },\n    { value: 'urgent', label: 'Urgent' },\n    { value: 'critical', label: 'Critical' }\n  ];\n\n  // Validate form fields\n  const validateForm = () => {\n    let isValid = true;\n    const newValidation = { ...validation };\n    \n    // Validate category\n    if (!formData.category) {\n      newValidation.category = {\n        error: true,\n        message: 'Category is required'\n      };\n      isValid = false;\n    } else {\n      newValidation.category = {\n        error: false,\n        message: ''\n      };\n    }\n    \n    // Validate description\n    if (!formData.description) {\n      newValidation.description = {\n        error: true,\n        message: 'Description is required'\n      };\n      isValid = false;\n    } else if (formData.description.length > 1000) {\n      newValidation.description = {\n        error: true,\n        message: 'Description cannot exceed 1000 characters'\n      };\n      isValid = false;\n    } else {\n      newValidation.description = {\n        error: false,\n        message: ''\n      };\n    }\n    \n    // Validate priority\n    if (!formData.priority) {\n      newValidation.priority = {\n        error: true,\n        message: 'Priority is required'\n      };\n      isValid = false;\n    } else {\n      newValidation.priority = {\n        error: false,\n        message: ''\n      };\n    }\n    \n    setValidation(newValidation);\n    return isValid;\n  };\n\n  // Handle input changes\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    \n    // Handle checkbox inputs\n    if (type === 'checkbox') {\n      setFormData({\n        ...formData,\n        [name]: checked\n      });\n      return;\n    }\n    \n    // Reset product type when category changes\n    if (name === 'category') {\n      setFormData({\n        ...formData,\n        [name]: value,\n        productType: ''\n      });\n      \n      // Clear category validation error when value is selected\n      if (value) {\n        setValidation({\n          ...validation,\n          category: {\n            error: false,\n            message: ''\n          }\n        });\n      }\n      return;\n    }\n    \n    // Validate description length\n    if (name === 'description') {\n      if (value.length > 1000) {\n        setValidation({\n          ...validation,\n          description: {\n            error: true,\n            message: 'Description cannot exceed 1000 characters'\n          }\n        });\n      } else {\n        setValidation({\n          ...validation,\n          description: {\n            error: false,\n            message: ''\n          }\n        });\n      }\n    }\n    \n    // Clear priority validation error when value is selected\n    if (name === 'priority' && value) {\n      setValidation({\n        ...validation,\n        priority: {\n          error: false,\n          message: ''\n        }\n      });\n    }\n    \n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate form before submission\n    if (!validateForm()) {\n      setError('Please fix the errors before submitting');\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      console.log('Submitting ticket with data:', formData);\n      console.log('API endpoint:', TICKET_ENDPOINTS.CREATE);\n      \n      const response = await axios.post(\n        TICKET_ENDPOINTS.CREATE,\n        formData,\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      \n      console.log('Ticket creation response:', response.data);\n      \n      if (response.data.success) {\n        setSuccess(true);\n        setCreatedTicketId(response.data.ticket._id);\n        setCreatedTicketNumber(response.data.ticket.ticketNumber);\n        \n        // Clear form data on success\n        setFormData({\n          category: '',\n          productType: '',\n          productName: '',\n          serialNumber: '',\n          warrantyStatus: false,\n          warrantyExpiry: '',\n          priority: 'medium',\n          description: '',\n          numberOfUsers: 1\n        });\n      } else {\n        // Handle unexpected success response format\n        setError('Ticket created but with unexpected response format');\n        console.warn('Unexpected response format:', response.data);\n      }\n    } catch (err) {\n      console.error('Error creating ticket:', err);\n      \n      // Extract error message from response\n      let errorMessage = 'An error occurred while creating the ticket';\n      \n      if (err.response) {\n        console.error('Error response data:', err.response.data);\n        console.error('Error response status:', err.response.status);\n        \n        if (err.response.data && err.response.data.message) {\n          errorMessage = err.response.data.message;\n        } else if (err.response.status === 400) {\n          errorMessage = 'Invalid ticket data. Please check your inputs.';\n        } else if (err.response.status === 401) {\n          errorMessage = 'Authentication error. Please log in again.';\n        } else if (err.response.status === 500) {\n          errorMessage = 'Server error. Please try again later.';\n        }\n      } else if (err.request) {\n        console.error('No response received from server');\n        errorMessage = 'No response from server. Please check your connection.';\n      } else {\n        console.error('Error setting up request:', err.message);\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle snackbar close\n  const handleCloseSnackbar = () => {\n    setError(null);\n    setSuccess(false);\n  };\n\n  // Handle view ticket button click\n  const handleViewTicket = () => {\n    if (createdTicketId) {\n      navigate(`/tickets/${createdTicketId}`);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Paper elevation={3} sx={{ p: 4, mt: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Create Support Ticket\n        </Typography>\n        \n        <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n          <Grid container spacing={3}>\n            {/* Category Selection */}\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth required error={validation.category.error}>\n                <InputLabel id=\"category-label\">Category</InputLabel>\n                <Select\n                  labelId=\"category-label\"\n                  id=\"category\"\n                  name=\"category\"\n                  value={formData.category}\n                  onChange={handleChange}\n                  label=\"Category\"\n                >\n                  {categories.map((category) => (\n                    <MenuItem key={category} value={category}>\n                      {category}\n                    </MenuItem>\n                  ))}\n                </Select>\n                {validation.category.error && (\n                  <FormHelperText error>{validation.category.message}</FormHelperText>\n                )}\n              </FormControl>\n            </Grid>\n            \n            {/* Product Type Selection (conditional) */}\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth disabled={!formData.category}>\n                <InputLabel id=\"productType-label\">Product Type</InputLabel>\n                <Select\n                  labelId=\"productType-label\"\n                  id=\"productType\"\n                  name=\"productType\"\n                  value={formData.productType}\n                  onChange={handleChange}\n                  label=\"Product Type\"\n                >\n                  {formData.category && productTypes[formData.category]?.map((type) => (\n                    <MenuItem key={type} value={type}>\n                      {type}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            \n            {/* Product Name */}\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                id=\"productName\"\n                name=\"productName\"\n                label=\"Product Name\"\n                value={formData.productName}\n                onChange={handleChange}\n                placeholder={formData.category ? `Enter ${formData.category.toLowerCase()} name` : 'Enter product name'}\n              />\n            </Grid>\n            \n            {/* Serial Number (optional) */}\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                id=\"serialNumber\"\n                name=\"serialNumber\"\n                label=\"Serial Number (optional)\"\n                value={formData.serialNumber}\n                onChange={handleChange}\n              />\n            </Grid>\n            \n            {/* Warranty Status */}\n            <Grid item xs={12} sm={6}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={formData.warrantyStatus}\n                    onChange={handleChange}\n                    name=\"warrantyStatus\"\n                  />\n                }\n                label=\"Product is under warranty\"\n              />\n            </Grid>\n            \n            {/* Warranty Expiry (conditional) */}\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                id=\"warrantyExpiry\"\n                name=\"warrantyExpiry\"\n                label=\"Warranty Expiry Date\"\n                type=\"date\"\n                value={formData.warrantyExpiry}\n                onChange={handleChange}\n                disabled={!formData.warrantyStatus}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            \n            {/* Number of Users Affected */}\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                id=\"numberOfUsers\"\n                name=\"numberOfUsers\"\n                label=\"Number of Users Affected\"\n                type=\"number\"\n                value={formData.numberOfUsers}\n                onChange={handleChange}\n                inputProps={{ min: 1 }}\n              />\n            </Grid>\n            \n            {/* Priority Selection */}\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth required error={validation.priority.error}>\n                <InputLabel id=\"priority-label\">Priority</InputLabel>\n                <Select\n                  labelId=\"priority-label\"\n                  id=\"priority\"\n                  name=\"priority\"\n                  value={formData.priority}\n                  onChange={handleChange}\n                  label=\"Priority\"\n                >\n                  {priorities.map((priority) => (\n                    <MenuItem key={priority.value} value={priority.value}>\n                      {priority.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <FormHelperText error={validation.priority.error}>\n                  {validation.priority.error \n                    ? validation.priority.message \n                    : 'Select the appropriate priority level for your issue'}\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n            \n            {/* Description */}\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                id=\"description\"\n                name=\"description\"\n                label=\"Description\"\n                multiline\n                rows={4}\n                value={formData.description}\n                onChange={handleChange}\n                required\n                error={validation.description.error}\n                helperText={validation.description.error \n                  ? validation.description.message \n                  : `${formData.description.length}/1000 characters`}\n                inputProps={{ maxLength: 1000 }}\n              />\n            </Grid>\n            \n            {/* Submit Button */}\n            <Grid item xs={12}>\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={loading}\n                  sx={{ mt: 2 }}\n                >\n                  {loading ? <CircularProgress size={24} /> : 'Submit Ticket'}\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n      \n      {/* Error Snackbar */}\n      <Snackbar open={!!error} autoHideDuration={6000} onClose={handleCloseSnackbar}>\n        <Alert onClose={handleCloseSnackbar} severity=\"error\" sx={{ width: '100%' }}>\n          {error}\n        </Alert>\n      </Snackbar>\n      \n      {/* Success Snackbar */}\n      <Snackbar \n        open={success} \n        autoHideDuration={6000} \n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert \n          onClose={handleCloseSnackbar} \n          severity=\"success\" \n          sx={{ width: '100%' }}\n          action={\n            <Button color=\"inherit\" size=\"small\" onClick={handleViewTicket}>\n              View Ticket\n            </Button>\n          }\n        >\n          {createdTicketNumber \n            ? `Ticket #${createdTicketNumber} created successfully!` \n            : 'Ticket created successfully!'}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default CreateTicket;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}