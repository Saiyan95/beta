{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sayda\\\\CascadeProjects\\\\beta-tech-support\\\\frontend\\\\src\\\\contexts\\\\TicketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { TICKET_ENDPOINTS, API_URL } from '../utils/apiConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicketContext = /*#__PURE__*/createContext();\nexport const useTickets = () => {\n  _s();\n  const context = useContext(TicketContext);\n  if (!context) {\n    throw new Error('useTickets must be used within a TicketProvider');\n  }\n  return context;\n};\n_s(useTickets, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const TicketProvider = ({\n  children\n}) => {\n  _s2();\n  const [tickets, setTickets] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch all tickets\n  const fetchTickets = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(TICKET_ENDPOINTS.GET_ALL, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setTickets(response.data);\n      console.log('Tickets fetched:', response.data);\n      return response.data;\n    } catch (err) {\n      console.error('Error fetching tickets:', err);\n      setError(err.message || 'Failed to fetch tickets');\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Add a new ticket to the local state\n  const addTicket = useCallback(newTicket => {\n    console.log('Adding ticket to context:', newTicket);\n    setTickets(prevTickets => [newTicket, ...prevTickets]);\n  }, []);\n\n  // Create a new ticket\n  const createTicket = useCallback(async ticketData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(TICKET_ENDPOINTS.CREATE, ticketData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // If successful, add the new ticket to our local state\n      if (response.data.ticket) {\n        addTicket(response.data.ticket);\n      }\n      return response.data;\n    } catch (err) {\n      console.error('Error creating ticket:', err);\n      setError(err.message || 'Failed to create ticket');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, [addTicket]);\n\n  // Find user by username and get their ID\n  const findUserByUsername = useCallback(async username => {\n    try {\n      const response = await axios.get(`${API_URL}/users/find?username=${username}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      console.error('Error finding user:', err);\n      throw err;\n    }\n  }, []);\n\n  // Assign ticket to a technician\n  const assignTicket = useCallback(async (ticketId, technicianId) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.patch(`${API_URL}/tickets/${ticketId}/assign`, {\n        technicianId\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Update the ticket in our local state\n      setTickets(prevTickets => prevTickets.map(ticket => ticket._id === ticketId ? response.data : ticket));\n      return response.data;\n    } catch (err) {\n      console.error(`Error assigning ticket ${ticketId}:`, err);\n      setError(err.message || `Failed to assign ticket ${ticketId}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Assign all unassigned tickets to a specified technician \n  const assignAllUnassignedTickets = useCallback(async username => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Step 1: Find the user by username\n      console.log(`Finding user with username: ${username}`);\n      const user = await findUserByUsername(username);\n      if (!user || !user._id) {\n        throw new Error(`User ${username} not found`);\n      }\n      console.log(`Found user: ${username} with ID: ${user._id}`);\n\n      // Step 2: Get all unassigned tickets\n      const unassignedTickets = tickets.filter(ticket => !ticket.assignedTo);\n      console.log(`Found ${unassignedTickets.length} unassigned tickets`);\n      if (unassignedTickets.length === 0) {\n        return {\n          message: 'No unassigned tickets found',\n          assignedCount: 0\n        };\n      }\n\n      // Step 3: Assign each ticket to the user\n      const assignPromises = unassignedTickets.map(ticket => assignTicket(ticket._id, user._id));\n      await Promise.all(assignPromises);\n      return {\n        message: `Successfully assigned ${unassignedTickets.length} tickets to ${username}`,\n        assignedCount: unassignedTickets.length\n      };\n    } catch (err) {\n      console.error('Error assigning all unassigned tickets:', err);\n      setError(err.message || 'Failed to assign tickets');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, [tickets, findUserByUsername, assignTicket]);\n  const value = {\n    tickets,\n    loading,\n    error,\n    fetchTickets,\n    addTicket,\n    createTicket,\n    assignTicket,\n    assignAllUnassignedTickets\n  };\n  return /*#__PURE__*/_jsxDEV(TicketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 10\n  }, this);\n};\n_s2(TicketProvider, \"S0zK8+tOYlwYNP710Zf/gAMwVlE=\");\n_c = TicketProvider;\nvar _c;\n$RefreshReg$(_c, \"TicketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","axios","TICKET_ENDPOINTS","API_URL","jsxDEV","_jsxDEV","TicketContext","useTickets","_s","context","Error","TicketProvider","children","_s2","tickets","setTickets","loading","setLoading","error","setError","fetchTickets","response","get","GET_ALL","headers","Authorization","localStorage","getItem","data","console","log","err","message","addTicket","newTicket","prevTickets","createTicket","ticketData","post","CREATE","ticket","findUserByUsername","username","assignTicket","ticketId","technicianId","patch","map","_id","assignAllUnassignedTickets","user","unassignedTickets","filter","assignedTo","length","assignedCount","assignPromises","Promise","all","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sayda/CascadeProjects/beta-tech-support/frontend/src/contexts/TicketContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { TICKET_ENDPOINTS, API_URL } from '../utils/apiConfig';\n\nconst TicketContext = createContext();\n\nexport const useTickets = () => {\n  const context = useContext(TicketContext);\n  if (!context) {\n    throw new Error('useTickets must be used within a TicketProvider');\n  }\n  return context;\n};\n\nexport const TicketProvider = ({ children }) => {\n  const [tickets, setTickets] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch all tickets\n  const fetchTickets = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(TICKET_ENDPOINTS.GET_ALL, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setTickets(response.data);\n      console.log('Tickets fetched:', response.data);\n      return response.data;\n    } catch (err) {\n      console.error('Error fetching tickets:', err);\n      setError(err.message || 'Failed to fetch tickets');\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Add a new ticket to the local state\n  const addTicket = useCallback((newTicket) => {\n    console.log('Adding ticket to context:', newTicket);\n    setTickets(prevTickets => [newTicket, ...prevTickets]);\n  }, []);\n\n  // Create a new ticket\n  const createTicket = useCallback(async (ticketData) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(\n        TICKET_ENDPOINTS.CREATE,\n        ticketData,\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      \n      // If successful, add the new ticket to our local state\n      if (response.data.ticket) {\n        addTicket(response.data.ticket);\n      }\n      \n      return response.data;\n    } catch (err) {\n      console.error('Error creating ticket:', err);\n      setError(err.message || 'Failed to create ticket');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, [addTicket]);\n\n  // Find user by username and get their ID\n  const findUserByUsername = useCallback(async (username) => {\n    try {\n      const response = await axios.get(`${API_URL}/users/find?username=${username}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      console.error('Error finding user:', err);\n      throw err;\n    }\n  }, []);\n\n  // Assign ticket to a technician\n  const assignTicket = useCallback(async (ticketId, technicianId) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.patch(\n        `${API_URL}/tickets/${ticketId}/assign`,\n        { technicianId },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      // Update the ticket in our local state\n      setTickets(prevTickets => \n        prevTickets.map(ticket => \n          ticket._id === ticketId ? response.data : ticket\n        )\n      );\n\n      return response.data;\n    } catch (err) {\n      console.error(`Error assigning ticket ${ticketId}:`, err);\n      setError(err.message || `Failed to assign ticket ${ticketId}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Assign all unassigned tickets to a specified technician \n  const assignAllUnassignedTickets = useCallback(async (username) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Step 1: Find the user by username\n      console.log(`Finding user with username: ${username}`);\n      const user = await findUserByUsername(username);\n      if (!user || !user._id) {\n        throw new Error(`User ${username} not found`);\n      }\n      \n      console.log(`Found user: ${username} with ID: ${user._id}`);\n      \n      // Step 2: Get all unassigned tickets\n      const unassignedTickets = tickets.filter(ticket => !ticket.assignedTo);\n      console.log(`Found ${unassignedTickets.length} unassigned tickets`);\n      \n      if (unassignedTickets.length === 0) {\n        return { message: 'No unassigned tickets found', assignedCount: 0 };\n      }\n      \n      // Step 3: Assign each ticket to the user\n      const assignPromises = unassignedTickets.map(ticket => \n        assignTicket(ticket._id, user._id)\n      );\n      \n      await Promise.all(assignPromises);\n      \n      return { \n        message: `Successfully assigned ${unassignedTickets.length} tickets to ${username}`,\n        assignedCount: unassignedTickets.length \n      };\n    } catch (err) {\n      console.error('Error assigning all unassigned tickets:', err);\n      setError(err.message || 'Failed to assign tickets');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, [tickets, findUserByUsername, assignTicket]);\n\n  const value = {\n    tickets,\n    loading,\n    error,\n    fetchTickets,\n    addTicket,\n    createTicket,\n    assignTicket,\n    assignAllUnassignedTickets\n  };\n\n  return <TicketContext.Provider value={value}>{children}</TicketContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}