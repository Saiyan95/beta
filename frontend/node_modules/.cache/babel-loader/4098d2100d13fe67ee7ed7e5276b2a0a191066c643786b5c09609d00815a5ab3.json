{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sayda\\\\CascadeProjects\\\\beta-tech-support\\\\frontend\\\\src\\\\components\\\\auth\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  userType\n}) => {\n  const token = localStorage.getItem('token');\n  const currentUserType = localStorage.getItem('userType');\n  if (!token) {\n    // Redirect to appropriate login page based on user type\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/${userType}/login`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  if (currentUserType !== userType) {\n    // Redirect to appropriate dashboard if user type doesn't match\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/${currentUserType}/dashboard`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","jsxDEV","_jsxDEV","PrivateRoute","userType","token","localStorage","getItem","currentUserType","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sayda/CascadeProjects/beta-tech-support/frontend/src/components/auth/PrivateRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\n\nconst PrivateRoute = ({ userType }) => {\n  const token = localStorage.getItem('token');\n  const currentUserType = localStorage.getItem('userType');\n\n  if (!token) {\n    // Redirect to appropriate login page based on user type\n    return <Navigate to={`/${userType}/login`} />;\n  }\n\n  if (currentUserType !== userType) {\n    // Redirect to appropriate dashboard if user type doesn't match\n    return <Navigate to={`/${currentUserType}/dashboard`} />;\n  }\n\n  return <Outlet />;\n};\n\nexport default PrivateRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,eAAe,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAExD,IAAI,CAACF,KAAK,EAAE;IACV;IACA,oBAAOH,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAE,IAAIL,QAAQ;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/C;EAEA,IAAIL,eAAe,KAAKJ,QAAQ,EAAE;IAChC;IACA,oBAAOF,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAE,IAAID,eAAe;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1D;EAEA,oBAAOX,OAAA,CAACF,MAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACC,EAAA,GAfIX,YAAY;AAiBlB,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}